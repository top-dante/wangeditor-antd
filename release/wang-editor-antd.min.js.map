{"version":3,"file":"wang-editor-antd.min.js","sources":["wang-editor-antd.min.js"],"sourcesContent":["(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n        typeof define === 'function' && define.amd ? define(factory) :\r\n            (global.wangEditor = factory());\r\n}(this, (function () {\r\n    'use strict';\r\n\r\n    /*\r\n    poly-fill\r\n*/\r\n\r\n    var polyfill = function () {\r\n\r\n        // Object.assign\r\n        if (typeof Object.assign != 'function') {\r\n            Object.assign = function (target, varArgs) {\r\n                // .length of function is 2\r\n                if (target == null) {\r\n                    // TypeError if undefined or null\r\n                    throw new TypeError('Cannot convert undefined or null to object');\r\n                }\r\n\r\n                var to = Object(target);\r\n\r\n                for (var index = 1; index < arguments.length; index++) {\r\n                    var nextSource = arguments[index];\r\n\r\n                    if (nextSource != null) {\r\n                        // Skip over if undefined or null\r\n                        for (var nextKey in nextSource) {\r\n                            // Avoid bugs when hasOwnProperty is shadowed\r\n                            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                                to[nextKey] = nextSource[nextKey];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return to;\r\n            };\r\n        }\r\n\r\n        // IE 中兼容 Element.prototype.matches\r\n        // if (!Element.prototype.matches) {\r\n        //     Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\r\n        //         let matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n        //             i = matches.length;\r\n        //         while (--i >= 0 && matches.item(i) !== this){return i}\r\n        //         return i > -1;\r\n        //     };\r\n        // }\r\n    };\r\n\r\n    /*\r\n    DOM 操作 API\r\n*/\r\n\r\n// 根据 html 代码片段创建 dom 对象\r\n    function createElemByHTML(html) {\r\n        var div = void 0;\r\n        div = document.createElement('div');\r\n        div.innerHTML = html;\r\n        return div.children;\r\n    }\r\n\r\n// 是否是 DOM List\r\n    function isDOMList(selector) {\r\n        if (!selector) {\r\n            return false;\r\n        }\r\n        if (selector instanceof HTMLCollection || selector instanceof NodeList) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n// 封装 document.querySelectorAll\r\n    function querySelectorAll(selector) {\r\n        var result = document.querySelectorAll(selector);\r\n        if (isDOMList(result)) {\r\n            return result;\r\n        } else {\r\n            return [result];\r\n        }\r\n    }\r\n\r\n// 记录所有的事件绑定\r\n    var eventList = [];\r\n\r\n// 创建构造函数\r\n    function DomElement(selector) {\r\n        if (!selector) {\r\n            return;\r\n        }\r\n\r\n        // selector 本来就是 DomElement 对象，直接返回\r\n        if (selector instanceof DomElement) {\r\n            return selector;\r\n        }\r\n\r\n        this.selector = selector;\r\n        var nodeType = selector.nodeType;\r\n\r\n        // 根据 selector 得出的结果（如 DOM，DOM List）\r\n        var selectorResult = [];\r\n        if (nodeType === 9) {\r\n            // document 节点\r\n            selectorResult = [selector];\r\n        } else if (nodeType === 1) {\r\n            // 单个 DOM 节点\r\n            selectorResult = [selector];\r\n        } else if (isDOMList(selector) || selector instanceof Array) {\r\n            // DOM List 或者数组\r\n            selectorResult = selector;\r\n        } else if (typeof selector === 'string') {\r\n            // 字符串\r\n            selector = selector.replace('/\\n/mg', '').trim();\r\n            if (selector.indexOf('<') === 0) {\r\n                // 如 <div>\r\n                selectorResult = createElemByHTML(selector);\r\n            } else {\r\n                // 如 #id .class\r\n                selectorResult = querySelectorAll(selector);\r\n            }\r\n        }\r\n\r\n        var length = selectorResult.length;\r\n        if (!length) {\r\n            // 空数组\r\n            return this;\r\n        }\r\n\r\n        // 加入 DOM 节点\r\n        var i = void 0;\r\n        for (i = 0; i < length; i++) {\r\n            this[i] = selectorResult[i];\r\n        }\r\n        this.length = length;\r\n    }\r\n\r\n// 修改原型\r\n    DomElement.prototype = {\r\n        constructor: DomElement,\r\n\r\n        // 类数组，forEach\r\n        forEach: function forEach(fn) {\r\n            var i = void 0;\r\n            for (i = 0; i < this.length; i++) {\r\n                var elem = this[i];\r\n                var result = fn.call(elem, elem, i);\r\n                if (result === false) {\r\n                    break;\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        // clone\r\n        clone: function clone(deep) {\r\n            var cloneList = [];\r\n            this.forEach(function (elem) {\r\n                cloneList.push(elem.cloneNode(!!deep));\r\n            });\r\n            return $(cloneList);\r\n        },\r\n\r\n        // 获取第几个元素\r\n        get: function get(index) {\r\n            var length = this.length;\r\n            if (index >= length) {\r\n                index = index % length;\r\n            }\r\n            return $(this[index]);\r\n        },\r\n\r\n        // 第一个\r\n        first: function first() {\r\n            return this.get(0);\r\n        },\r\n\r\n        // 最后一个\r\n        last: function last() {\r\n            var length = this.length;\r\n            return this.get(length - 1);\r\n        },\r\n\r\n        // 绑定事件\r\n        on: function on(type, selector, fn) {\r\n            // selector 不为空，证明绑定事件要加代理\r\n            if (!fn) {\r\n                fn = selector;\r\n                selector = null;\r\n            }\r\n\r\n            // type 是否有多个\r\n            var types = [];\r\n            types = type.split(/\\s+/);\r\n\r\n            return this.forEach(function (elem) {\r\n                types.forEach(function (type) {\r\n                    if (!type) {\r\n                        return;\r\n                    }\r\n\r\n                    // 记录下，方便后面解绑\r\n                    eventList.push({\r\n                        elem: elem,\r\n                        type: type,\r\n                        fn: fn\r\n                    });\r\n\r\n                    if (!selector) {\r\n                        // 无代理\r\n                        elem.addEventListener(type, fn);\r\n                        return;\r\n                    }\r\n\r\n                    // 有代理\r\n                    elem.addEventListener(type, function (e) {\r\n                        var target = e.target;\r\n                        if (target.matches(selector)) {\r\n                            fn.call(target, e);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        },\r\n\r\n        // 取消事件绑定\r\n        off: function off(type, fn) {\r\n            return this.forEach(function (elem) {\r\n                elem.removeEventListener(type, fn);\r\n            });\r\n        },\r\n\r\n        // 获取/设置 属性\r\n        attr: function attr(key, val) {\r\n            if (val == null) {\r\n                // 获取值\r\n                return this[0].getAttribute(key);\r\n            } else {\r\n                // 设置值\r\n                return this.forEach(function (elem) {\r\n                    elem.setAttribute(key, val);\r\n                });\r\n            }\r\n        },\r\n\r\n        // 添加 class\r\n        addClass: function addClass(className) {\r\n            if (!className) {\r\n                return this;\r\n            }\r\n            return this.forEach(function (elem) {\r\n                var arr = void 0;\r\n                if (elem.className) {\r\n                    // 解析当前 className 转换为数组\r\n                    arr = elem.className.split(/\\s/);\r\n                    arr = arr.filter(function (item) {\r\n                        return !!item.trim();\r\n                    });\r\n                    // 添加 class\r\n                    if (arr.indexOf(className) < 0) {\r\n                        arr.push(className);\r\n                    }\r\n                    // 修改 elem.class\r\n                    elem.className = arr.join(' ');\r\n                } else {\r\n                    elem.className = className;\r\n                }\r\n            });\r\n        },\r\n\r\n        // 删除 class\r\n        removeClass: function removeClass(className) {\r\n            if (!className) {\r\n                return this;\r\n            }\r\n            return this.forEach(function (elem) {\r\n                var arr = void 0;\r\n                if (elem.className) {\r\n                    // 解析当前 className 转换为数组\r\n                    arr = elem.className.split(/\\s/);\r\n                    arr = arr.filter(function (item) {\r\n                        item = item.trim();\r\n                        // 删除 class\r\n                        if (!item || item === className) {\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    // 修改 elem.class\r\n                    elem.className = arr.join(' ');\r\n                }\r\n            });\r\n        },\r\n\r\n        // 修改 css\r\n        css: function css(key, val) {\r\n            var currentStyle = key + ':' + val + ';';\r\n            return this.forEach(function (elem) {\r\n                var style = (elem.getAttribute('style') || '').trim();\r\n                var styleArr = void 0,\r\n                    resultArr = [];\r\n                if (style) {\r\n                    // 将 style 按照 ; 拆分为数组\r\n                    styleArr = style.split(';');\r\n                    styleArr.forEach(function (item) {\r\n                        // 对每项样式，按照 : 拆分为 key 和 value\r\n                        var arr = item.split(':').map(function (i) {\r\n                            return i.trim();\r\n                        });\r\n                        if (arr.length === 2) {\r\n                            resultArr.push(arr[0] + ':' + arr[1]);\r\n                        }\r\n                    });\r\n                    // 替换或者新增\r\n                    resultArr = resultArr.map(function (item) {\r\n                        if (item.indexOf(key) === 0) {\r\n                            return currentStyle;\r\n                        } else {\r\n                            return item;\r\n                        }\r\n                    });\r\n                    if (resultArr.indexOf(currentStyle) < 0) {\r\n                        resultArr.push(currentStyle);\r\n                    }\r\n                    // 结果\r\n                    elem.setAttribute('style', resultArr.join('; '));\r\n                } else {\r\n                    // style 无值\r\n                    elem.setAttribute('style', currentStyle);\r\n                }\r\n            });\r\n        },\r\n\r\n        // 显示\r\n        show: function show() {\r\n            return this.css('display', 'block');\r\n        },\r\n\r\n        // 隐藏\r\n        hide: function hide() {\r\n            return this.css('display', 'none');\r\n        },\r\n\r\n        // 获取子节点\r\n        children: function children() {\r\n            var elem = this[0];\r\n            if (!elem) {\r\n                return null;\r\n            }\r\n\r\n            return $(elem.children);\r\n        },\r\n\r\n        // 获取子节点（包括文本节点）\r\n        childNodes: function childNodes() {\r\n            var elem = this[0];\r\n            if (!elem) {\r\n                return null;\r\n            }\r\n\r\n            return $(elem.childNodes);\r\n        },\r\n\r\n        // 增加子节点\r\n        append: function append($children) {\r\n            return this.forEach(function (elem) {\r\n                $children.forEach(function (child) {\r\n                    elem.appendChild(child);\r\n                });\r\n            });\r\n        },\r\n\r\n        // 移除当前节点\r\n        remove: function remove() {\r\n            return this.forEach(function (elem) {\r\n                if (elem.remove) {\r\n                    elem.remove();\r\n                } else {\r\n                    var parent = elem.parentElement;\r\n                    parent && parent.removeChild(elem);\r\n                }\r\n            });\r\n        },\r\n\r\n        // 是否包含某个子节点\r\n        isContain: function isContain($child) {\r\n            var elem = this[0];\r\n            var child = $child[0];\r\n            return elem.contains(child);\r\n        },\r\n\r\n        // 尺寸数据\r\n        getSizeData: function getSizeData() {\r\n            var elem = this[0];\r\n            return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\r\n        },\r\n\r\n        // 封装 nodeName\r\n        getNodeName: function getNodeName() {\r\n            var elem = this[0];\r\n            return elem.nodeName;\r\n        },\r\n\r\n        // 从当前元素查找\r\n        find: function find(selector) {\r\n            var elem = this[0];\r\n            return $(elem.querySelectorAll(selector));\r\n        },\r\n\r\n        // 获取当前元素的 text\r\n        text: function text(val) {\r\n            if (!val) {\r\n                // 获取 text\r\n                var elem = this[0];\r\n                return elem.innerHTML.replace(/<.*?>/g, function () {\r\n                    return '';\r\n                });\r\n            } else {\r\n                // 设置 text\r\n                return this.forEach(function (elem) {\r\n                    elem.innerHTML = val;\r\n                });\r\n            }\r\n        },\r\n\r\n        // 获取 html\r\n        html: function html(value) {\r\n            var elem = this[0];\r\n            if (value == null) {\r\n                return elem.innerHTML;\r\n            } else {\r\n                elem.innerHTML = value;\r\n                return this;\r\n            }\r\n        },\r\n\r\n        // 获取 value\r\n        val: function val() {\r\n            var elem = this[0];\r\n            return elem.value.trim();\r\n        },\r\n\r\n        // focus\r\n        focus: function focus() {\r\n            return this.forEach(function (elem) {\r\n                elem.focus();\r\n            });\r\n        },\r\n\r\n        // parent\r\n        parent: function parent() {\r\n            var elem = this[0];\r\n            return $(elem.parentElement);\r\n        },\r\n\r\n        // parentUntil 找到符合 selector 的父节点\r\n        parentUntil: function parentUntil(selector, _currentElem) {\r\n            var results = document.querySelectorAll(selector);\r\n            var length = results.length;\r\n            if (!length) {\r\n                // 传入的 selector 无效\r\n                return null;\r\n            }\r\n\r\n            var elem = _currentElem || this[0];\r\n            if (elem.nodeName === 'BODY') {\r\n                return null;\r\n            }\r\n\r\n            var parent = elem.parentElement;\r\n            var i = void 0;\r\n            for (i = 0; i < length; i++) {\r\n                if (parent === results[i]) {\r\n                    // 找到，并返回\r\n                    return $(parent);\r\n                }\r\n            }\r\n\r\n            // 继续查找\r\n            return this.parentUntil(selector, parent);\r\n        },\r\n\r\n        // 判断两个 elem 是否相等\r\n        equal: function equal($elem) {\r\n            if ($elem.nodeType === 1) {\r\n                return this[0] === $elem;\r\n            } else {\r\n                return this[0] === $elem[0];\r\n            }\r\n        },\r\n\r\n        // 将该元素插入到某个元素前面\r\n        insertBefore: function insertBefore(selector) {\r\n            var $referenceNode = $(selector);\r\n            var referenceNode = $referenceNode[0];\r\n            if (!referenceNode) {\r\n                return this;\r\n            }\r\n            return this.forEach(function (elem) {\r\n                var parent = referenceNode.parentNode;\r\n                parent.insertBefore(elem, referenceNode);\r\n            });\r\n        },\r\n\r\n        // 将该元素插入到某个元素后面\r\n        insertAfter: function insertAfter(selector) {\r\n            var $referenceNode = $(selector);\r\n            var referenceNode = $referenceNode[0];\r\n            if (!referenceNode) {\r\n                return this;\r\n            }\r\n            return this.forEach(function (elem) {\r\n                var parent = referenceNode.parentNode;\r\n                if (parent.lastChild === referenceNode) {\r\n                    // 最后一个元素\r\n                    parent.appendChild(elem);\r\n                } else {\r\n                    // 不是最后一个元素\r\n                    parent.insertBefore(elem, referenceNode.nextSibling);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n// new 一个对象\r\n    function $(selector) {\r\n        return new DomElement(selector);\r\n    }\r\n\r\n// 解绑所有事件，用于销毁编辑器\r\n    $.offAll = function () {\r\n        eventList.forEach(function (item) {\r\n            var elem = item.elem;\r\n            var type = item.type;\r\n            var fn = item.fn;\r\n            // 解绑\r\n            elem.removeEventListener(type, fn);\r\n        });\r\n    };\r\n\r\n    /*\r\n    配置信息\r\n*/\r\n\r\n    var config = {\r\n\r\n        // 默认菜单配置\r\n        menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\r\n        fontNames: ['宋体', '楷体', '楷体GB2312', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\r\n\r\n        colors: ['rgb(0,0,0)', 'rgba(0,0,0,65)', '#1890ff', '#13c2c2', '#52c41a', '#2f54eb', '#722ed1', '#eb2f96', '#fadb14', '#faad14', '#fa541c', '#f5222d', '#ffffff'],\r\n\r\n        // // 语言配置\r\n        // lang: {\r\n        //     '设置标题': 'title',\r\n        //     '正文': 'p',\r\n        //     '链接文字': 'link text',\r\n        //     '链接': 'link',\r\n        //     '插入': 'insert',\r\n        //     '创建': 'init'\r\n        // },\r\n\r\n        // 表情\r\n        emotions: [{\r\n            // tab 的标题\r\n            title: '默认',\r\n            // type -> 'emoji' / 'image'\r\n            type: 'image',\r\n            // content -> 数组\r\n            content: [{\r\n                alt: '[坏笑]',\r\n                src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\r\n            }, {\r\n                alt: '[舔屏]',\r\n                src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\r\n            }, {\r\n                alt: '[污]',\r\n                src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\r\n            }]\r\n        }, {\r\n            // tab 的标题\r\n            title: '新浪',\r\n            // type -> 'emoji' / 'image'\r\n            type: 'image',\r\n            // content -> 数组\r\n            content: [{\r\n                src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\r\n                alt: '[草泥马]'\r\n            }, {\r\n                src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\r\n                alt: '[神马]'\r\n            }, {\r\n                src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\r\n                alt: '[浮云]'\r\n            }]\r\n        }, {\r\n            // tab 的标题\r\n            title: 'emoji',\r\n            // type -> 'emoji' / 'image'\r\n            type: 'emoji',\r\n            // content -> 数组\r\n            content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\r\n        }],\r\n\r\n        // 编辑区域的 z-index\r\n        zIndex: 2,\r\n\r\n        // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\r\n        debug: false,\r\n\r\n        // 插入链接时候的格式校验\r\n        linkCheck: function linkCheck(text, link) {\r\n            // text 是插入的文字\r\n            // link 是插入的链接\r\n            return true; // 返回 true 即表示成功\r\n            // return '校验失败' // 返回字符串即表示失败的提示信息\r\n        },\r\n\r\n        // 插入网络图片的校验\r\n        linkImgCheck: function linkImgCheck(src) {\r\n            // src 即图片的地址\r\n            return true; // 返回 true 即表示成功\r\n            // return '校验失败'  // 返回字符串即表示失败的提示信息\r\n        },\r\n\r\n        // 粘贴过滤样式，默认开启\r\n        pasteFilterStyle: true,\r\n\r\n        // 粘贴内容时，忽略图片。默认关闭\r\n        pasteIgnoreImg: false,\r\n\r\n        // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\r\n        // IE 暂时不支持\r\n        pasteTextHandle: function pasteTextHandle(content) {\r\n            // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\r\n            return content;\r\n        },\r\n\r\n        // onchange 事件\r\n        // onchange: function (html) {\r\n        //     // html 即变化之后的内容\r\n        //     console.log(html)\r\n        // },\r\n\r\n        // 是否显示添加网络图片的 tab\r\n        showLinkImg: true,\r\n\r\n        // 插入网络图片的回调\r\n        linkImgCallback: function linkImgCallback(url) {\r\n            // console.log(url)  // url 即插入图片的地址\r\n        },\r\n\r\n        // 默认上传图片 max size: 5M\r\n        uploadImgMaxSize: 5 * 1024 * 1024,\r\n\r\n        // 配置一次最多上传几个图片\r\n        // uploadImgMaxLength: 5,\r\n\r\n        // 上传图片，是否显示 base64 格式\r\n        uploadImgShowBase64: false,\r\n\r\n        // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\r\n        // uploadImgServer: '/upload',\r\n\r\n        // 自定义配置 filename\r\n        uploadFileName: '',\r\n\r\n        // 上传图片的自定义参数\r\n        uploadImgParams: {\r\n            // token: 'abcdef12345'\r\n        },\r\n\r\n        // 上传图片的自定义header\r\n        uploadImgHeaders: {\r\n            // 'Accept': 'text/x-json'\r\n        },\r\n\r\n        // 配置 XHR withCredentials\r\n        withCredentials: false,\r\n\r\n        // 自定义上传图片超时时间 ms\r\n        uploadImgTimeout: 10000,\r\n\r\n        // 上传图片 hook\r\n        uploadImgHooks: {\r\n            // customInsert: function (insertLinkImg, result, editor) {\r\n            //     console.log('customInsert')\r\n            //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\r\n            //     const data = result.data1 || []\r\n            //     data.forEach(link => {\r\n            //         insertLinkImg(link)\r\n            //     })\r\n            // },\r\n            before: function before(xhr, editor, files) {\r\n                // 图片上传之前触发\r\n\r\n                // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\r\n                // return {\r\n                //     prevent: true,\r\n                //     msg: '放弃上传'\r\n                // }\r\n            },\r\n            success: function success(xhr, editor, result) {\r\n                // 图片上传并返回结果，图片插入成功之后触发\r\n            },\r\n            fail: function fail(xhr, editor, result) {\r\n                // 图片上传并返回结果，但图片插入错误时触发\r\n            },\r\n            error: function error(xhr, editor) {\r\n                // 图片上传出错时触发\r\n            },\r\n            timeout: function timeout(xhr, editor) {\r\n                // 图片上传超时时触发\r\n            }\r\n        },\r\n\r\n        // 是否上传七牛云，默认为 false\r\n        qiniu: false,\r\n        width:'100%',\r\n        minHeight:'100px',\r\n        maxHeight:'400px',\r\n        textBgColor:'#ffffff',\r\n        toolBarSize:'' //small\r\n\r\n    };\r\n\r\n    /*\r\n    工具\r\n*/\r\n\r\n// 和 UA 相关的属性\r\n    var UA = {\r\n        _ua: navigator.userAgent,\r\n\r\n        // 是否 webkit\r\n        isWebkit: function isWebkit() {\r\n            var reg = /webkit/i;\r\n            return reg.test(this._ua);\r\n        },\r\n\r\n        // 是否 IE\r\n        isIE: function isIE() {\r\n            return 'ActiveXObject' in window;\r\n        }\r\n    };\r\n\r\n// 遍历对象\r\n    function objForEach(obj, fn) {\r\n        var key = void 0,\r\n            result = void 0;\r\n        for (key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                result = fn.call(obj, key, obj[key]);\r\n                if (result === false) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n// 遍历类数组\r\n    function arrForEach(fakeArr, fn) {\r\n        var i = void 0,\r\n            item = void 0,\r\n            result = void 0;\r\n        var length = fakeArr.length || 0;\r\n        for (i = 0; i < length; i++) {\r\n            item = fakeArr[i];\r\n            result = fn.call(fakeArr, item, i);\r\n            if (result === false) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n// 获取随机数\r\n    function getRandom(prefix) {\r\n        return prefix + Math.random().toString().slice(2);\r\n    }\r\n\r\n// 替换 html 特殊字符\r\n    function replaceHtmlSymbol(html) {\r\n        if (html == null) {\r\n            return '';\r\n        }\r\n        return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\r\n    }\r\n\r\n// 返回百分比的格式\r\n\r\n\r\n// 判断是不是 function\r\n    function isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /*\r\n    bold-menu\r\n*/\r\n\r\n// 构造函数\r\n    function Bold(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\">\\n  <i class=\"w-e-icon-bold\"></i>\\n        </div>');\r\n        this.type = 'click';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Bold.prototype = {\r\n        constructor: Bold,\r\n\r\n        // 点击事件\r\n        onClick: function onClick(e) {\r\n            // 点击菜单将触发这里\r\n\r\n            var editor = this.editor;\r\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\r\n\r\n            if (isSeleEmpty) {\r\n                // 选区是空的，插入并选中一个“空白”\r\n                editor.selection.createEmptyRange();\r\n            }\r\n\r\n            // 执行 bold 命令\r\n            editor.cmd.do('bold');\r\n\r\n            if (isSeleEmpty) {\r\n                // 需要将选取折叠起来\r\n                editor.selection.collapseRange();\r\n                editor.selection.restoreSelection();\r\n            }\r\n        },\r\n\r\n        // 试图改变 active 状态\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            if (editor.cmd.queryCommandState('bold')) {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    替换多语言\r\n */\r\n\r\n    var replaceLang = function (editor, str) {\r\n        var langArgs = editor.config.langArgs || [];\r\n        var result = str;\r\n\r\n        langArgs.forEach(function (item) {\r\n            var reg = item.reg;\r\n            var val = item.val;\r\n\r\n            if (reg.test(result)) {\r\n                result = result.replace(reg, function () {\r\n                    return val;\r\n                });\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    /*\r\n    droplist\r\n*/\r\n    var _emptyFn = function _emptyFn() {\r\n    };\r\n\r\n// 构造函数\r\n    function DropList(menu, opt) {\r\n        var _this = this;\r\n\r\n        // droplist 所依附的菜单\r\n        var editor = menu.editor;\r\n        this.menu = menu;\r\n        this.opt = opt;\r\n        // 容器\r\n        var $container = $('<div class=\"w-e-droplist\"></div>');\r\n\r\n        // 标题\r\n        var $title = opt.$title;\r\n        var titleHtml = void 0;\r\n        if ($title) {\r\n            // 替换多语言\r\n            titleHtml = $title.html();\r\n            titleHtml = replaceLang(editor, titleHtml);\r\n            $title.html(titleHtml);\r\n\r\n            $title.addClass('w-e-dp-title');\r\n            $container.append($title);\r\n        }\r\n\r\n        var list = opt.list || [];\r\n        var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\r\n        var onClick = opt.onClick || _emptyFn;\r\n\r\n        // 加入 DOM 并绑定事件\r\n        var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\r\n        $container.append($list);\r\n        list.forEach(function (item) {\r\n            var $elem = item.$elem;\r\n\r\n            // 替换多语言\r\n            var elemHtml = $elem.html();\r\n            elemHtml = replaceLang(editor, elemHtml);\r\n            $elem.html(elemHtml);\r\n\r\n            var value = item.value;\r\n            var $li = $('<li class=\"w-e-item\"></li>');\r\n            if ($elem) {\r\n                $li.append($elem);\r\n                $list.append($li);\r\n                $li.on('click', function (e) {\r\n                    onClick(value);\r\n\r\n                    // 隐藏\r\n                    _this.hideTimeoutId = setTimeout(function () {\r\n                        _this.hide();\r\n                    }, 0);\r\n                });\r\n            }\r\n        });\r\n\r\n        // 绑定隐藏事件\r\n        $container.on('mouseleave', function (e) {\r\n            _this.hideTimeoutId = setTimeout(function () {\r\n                _this.hide();\r\n            }, 0);\r\n        });\r\n\r\n        // 记录属性\r\n        this.$container = $container;\r\n\r\n        // 基本属性\r\n        this._rendered = false;\r\n        this._show = false;\r\n    }\r\n\r\n// 原型\r\n    DropList.prototype = {\r\n        constructor: DropList,\r\n\r\n        // 显示（插入DOM）\r\n        show: function show() {\r\n            if (this.hideTimeoutId) {\r\n                // 清除之前的定时隐藏\r\n                clearTimeout(this.hideTimeoutId);\r\n            }\r\n\r\n            var menu = this.menu;\r\n            var $menuELem = menu.$elem;\r\n            var $container = this.$container;\r\n            if (this._show) {\r\n                return;\r\n            }\r\n            if (this._rendered) {\r\n                // 显示\r\n                $container.show();\r\n            } else {\r\n                var menuHeight = $menuELem.getSizeData().height || 0;\r\n                var width = this.opt.width || 100; // 默认为 100\r\n                $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\r\n\r\n                // 加入到 DOM\r\n                $menuELem.append($container);\r\n                this._rendered = true;\r\n            }\r\n\r\n            // 修改属性\r\n            this._show = true;\r\n        },\r\n\r\n        // 隐藏（移除DOM）\r\n        hide: function hide() {\r\n            if (this.showTimeoutId) {\r\n                // 清除之前的定时显示\r\n                clearTimeout(this.showTimeoutId);\r\n            }\r\n\r\n            var $container = this.$container;\r\n            if (!this._show) {\r\n                return;\r\n            }\r\n            // 隐藏并需改属性\r\n            $container.hide();\r\n            this._show = false;\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - header\r\n*/\r\n\r\n// 构造函数\r\n    function Head(editor) {\r\n        var _this = this;\r\n\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-number\"></i></div>');\r\n        this.type = 'droplist';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n\r\n        // 初始化 droplist\r\n        this.droplist = new DropList(this, {\r\n            width: 100,\r\n            $title: $('<p>设置标题</p>'),\r\n            type: 'list', // droplist 以列表形式展示\r\n            list: [{$elem: $('<h1>H1</h1>'), value: '<h1>'}, {\r\n                $elem: $('<h2>H2</h2>'),\r\n                value: '<h2>'\r\n            }, {$elem: $('<h3>H3</h3>'), value: '<h3>'}, {\r\n                $elem: $('<h4>H4</h4>'),\r\n                value: '<h4>'\r\n            }, {$elem: $('<h5>H5</h5>'), value: '<h5>'}, {$elem: $('<p>正文</p>'), value: '<p>'}],\r\n            onClick: function onClick(value) {\r\n                // 注意 this 是指向当前的 Head 对象\r\n                _this._command(value);\r\n            }\r\n        });\r\n    }\r\n\r\n// 原型\r\n    Head.prototype = {\r\n        constructor: Head,\r\n\r\n        // 执行命令\r\n        _command: function _command(value) {\r\n            var editor = this.editor;\r\n\r\n            var $selectionElem = editor.selection.getSelectionContainerElem();\r\n            if (editor.$textElem.equal($selectionElem)) {\r\n                // 不能选中多行来设置标题，否则会出现问题\r\n                // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\r\n                return;\r\n            }\r\n\r\n            editor.cmd.do('formatBlock', value);\r\n        },\r\n\r\n        // 试图改变 active 状态\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            var reg = /^h/i;\r\n            var cmdValue = editor.cmd.queryCommandValue('formatBlock');\r\n            if (reg.test(cmdValue)) {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - fontSize\r\n*/\r\n\r\n// 构造函数\r\n    function FontSize(editor) {\r\n        var _this = this;\r\n\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font-size\"></i></div>');\r\n        this.type = 'droplist';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n\r\n        // 初始化 droplist\r\n        this.droplist = new DropList(this, {\r\n            width: 160,\r\n            $title: $('<p>字号</p>'),\r\n            type: 'list', // droplist 以列表形式展示\r\n            list: [{\r\n                $elem: $('<span style=\"font-size: x-small;\">x-small</span>'),\r\n                value: '1'\r\n            }, {$elem: $('<span style=\"font-size: small;\">small</span>'), value: '2'}, {\r\n                $elem: $('<span>normal</span>'),\r\n                value: '3'\r\n            }, {\r\n                $elem: $('<span style=\"font-size: large;\">large</span>'),\r\n                value: '4'\r\n            }, {\r\n                $elem: $('<span style=\"font-size: x-large;\">x-large</span>'),\r\n                value: '5'\r\n            }, {$elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6'}],\r\n            onClick: function onClick(value) {\r\n                // 注意 this 是指向当前的 FontSize 对象\r\n                _this._command(value);\r\n            }\r\n        });\r\n    }\r\n\r\n// 原型\r\n    FontSize.prototype = {\r\n        constructor: FontSize,\r\n\r\n        // 执行命令\r\n        _command: function _command(value) {\r\n            var editor = this.editor;\r\n            editor.cmd.do('fontSize', value);\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - fontName\r\n*/\r\n\r\n// 构造函数\r\n    function FontName(editor) {\r\n        var _this = this;\r\n\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-line-height\"></i></div>');\r\n        this.type = 'droplist';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n\r\n        // 获取配置的字体\r\n        var config = editor.config;\r\n        var fontNames = config.fontNames || [];\r\n\r\n        // 初始化 droplist\r\n        this.droplist = new DropList(this, {\r\n            width: 100,\r\n            $title: $('<p>字体</p>'),\r\n            type: 'list', // droplist 以列表形式展示\r\n            list: fontNames.map(function (fontName) {\r\n                return {\r\n                    $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'),\r\n                    value: fontName\r\n                };\r\n            }),\r\n            onClick: function onClick(value) {\r\n                // 注意 this 是指向当前的 FontName 对象\r\n                _this._command(value);\r\n            }\r\n        });\r\n    }\r\n\r\n// 原型\r\n    FontName.prototype = {\r\n        constructor: FontName,\r\n\r\n        _command: function _command(value) {\r\n            var editor = this.editor;\r\n            editor.cmd.do('fontName', value);\r\n        }\r\n    };\r\n\r\n    /*\r\n    panel\r\n*/\r\n\r\n    var emptyFn = function emptyFn() {\r\n    };\r\n\r\n// 记录已经显示 panel 的菜单\r\n    var _isCreatedPanelMenus = [];\r\n\r\n// 构造函数\r\n    function Panel(menu, opt) {\r\n        this.menu = menu;\r\n        this.opt = opt;\r\n    }\r\n\r\n// 原型\r\n    Panel.prototype = {\r\n        constructor: Panel,\r\n\r\n        // 显示（插入DOM）\r\n        show: function show() {\r\n            var _this = this;\r\n\r\n            var menu = this.menu;\r\n            if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\r\n                // 该菜单已经创建了 panel 不能再创建\r\n                return;\r\n            }\r\n\r\n            var editor = menu.editor;\r\n            var $body = $('body');\r\n            var $textContainerElem = editor.$textContainerElem;\r\n            var opt = this.opt;\r\n\r\n            // panel 的容器\r\n            var $container = $('<div class=\"w-e-panel-container\"></div>');\r\n            var width = opt.width || 300; // 默认 300px\r\n            $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\r\n\r\n            // 添加关闭按钮\r\n            var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\r\n            $container.append($closeBtn);\r\n            $closeBtn.on('click', function () {\r\n                _this.hide();\r\n            });\r\n\r\n            // 准备 tabs 容器\r\n            var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\r\n            var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\r\n            $container.append($tabTitleContainer).append($tabContentContainer);\r\n\r\n            // 设置高度\r\n            var height = opt.height;\r\n            if (height) {\r\n                $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\r\n            }\r\n\r\n            // tabs\r\n            var tabs = opt.tabs || [];\r\n            var tabTitleArr = [];\r\n            var tabContentArr = [];\r\n            tabs.forEach(function (tab, tabIndex) {\r\n                if (!tab) {\r\n                    return;\r\n                }\r\n                var title = tab.title || '';\r\n                var tpl = tab.tpl || '';\r\n\r\n                // 替换多语言\r\n                title = replaceLang(editor, title);\r\n                tpl = replaceLang(editor, tpl);\r\n\r\n                // 添加到 DOM\r\n                var $title = $('<li class=\"w-e-item\">' + title + '</li>');\r\n                $tabTitleContainer.append($title);\r\n                var $content = $(tpl);\r\n                $tabContentContainer.append($content);\r\n\r\n                // 记录到内存\r\n                $title._index = tabIndex;\r\n                tabTitleArr.push($title);\r\n                tabContentArr.push($content);\r\n\r\n                // 设置 active 项\r\n                if (tabIndex === 0) {\r\n                    $title._active = true;\r\n                    $title.addClass('w-e-active');\r\n                } else {\r\n                    $content.hide();\r\n                }\r\n\r\n                // 绑定 tab 的事件\r\n                $title.on('click', function (e) {\r\n                    if ($title._active) {\r\n                        return;\r\n                    }\r\n                    // 隐藏所有的 tab\r\n                    tabTitleArr.forEach(function ($title) {\r\n                        $title._active = false;\r\n                        $title.removeClass('w-e-active');\r\n                    });\r\n                    tabContentArr.forEach(function ($content) {\r\n                        $content.hide();\r\n                    });\r\n\r\n                    // 显示当前的 tab\r\n                    $title._active = true;\r\n                    $title.addClass('w-e-active');\r\n                    $content.show();\r\n                });\r\n            });\r\n\r\n            // 绑定关闭事件\r\n            $container.on('click', function (e) {\r\n                // 点击时阻止冒泡\r\n                e.stopPropagation();\r\n            });\r\n            $body.on('click', function (e) {\r\n                _this.hide();\r\n            });\r\n\r\n            // 添加到 DOM\r\n            $textContainerElem.append($container);\r\n\r\n            // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\r\n            tabs.forEach(function (tab, index) {\r\n                if (!tab) {\r\n                    return;\r\n                }\r\n                var events = tab.events || [];\r\n                events.forEach(function (event) {\r\n                    var selector = event.selector;\r\n                    var type = event.type;\r\n                    var fn = event.fn || emptyFn;\r\n                    var $content = tabContentArr[index];\r\n                    $content.find(selector).on(type, function (e) {\r\n                        e.stopPropagation();\r\n                        var needToHide = fn(e);\r\n                        // 执行完事件之后，是否要关闭 panel\r\n                        if (needToHide) {\r\n                            _this.hide();\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n\r\n            // focus 第一个 elem\r\n            var $inputs = $container.find('input[type=text],textarea');\r\n            if ($inputs.length) {\r\n                $inputs.get(0).focus();\r\n            }\r\n\r\n            // 添加到属性\r\n            this.$container = $container;\r\n\r\n            // 隐藏其他 panel\r\n            this._hideOtherPanels();\r\n            // 记录该 menu 已经创建了 panel\r\n            _isCreatedPanelMenus.push(menu);\r\n        },\r\n\r\n        // 隐藏（移除DOM）\r\n        hide: function hide() {\r\n            var menu = this.menu;\r\n            var $container = this.$container;\r\n            if ($container) {\r\n                $container.remove();\r\n            }\r\n\r\n            // 将该 menu 记录中移除\r\n            _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\r\n                if (item === menu) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            });\r\n        },\r\n\r\n        // 一个 panel 展示时，隐藏其他 panel\r\n        _hideOtherPanels: function _hideOtherPanels() {\r\n            if (!_isCreatedPanelMenus.length) {\r\n                return;\r\n            }\r\n            _isCreatedPanelMenus.forEach(function (menu) {\r\n                var panel = menu.panel || {};\r\n                if (panel.hide) {\r\n                    panel.hide();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - link\r\n*/\r\n\r\n// 构造函数\r\n    function Link(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\r\n        this.type = 'panel';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Link.prototype = {\r\n        constructor: Link,\r\n\r\n        // 点击事件\r\n        onClick: function onClick(e) {\r\n            var editor = this.editor;\r\n            var $linkelem = void 0;\r\n\r\n            if (this._active) {\r\n                // 当前选区在链接里面\r\n                $linkelem = editor.selection.getSelectionContainerElem();\r\n                if (!$linkelem) {\r\n                    return;\r\n                }\r\n                // 将该元素都包含在选取之内，以便后面整体替换\r\n                editor.selection.createRangeByElem($linkelem);\r\n                editor.selection.restoreSelection();\r\n                // 显示 panel\r\n                this._createPanel($linkelem.text(), $linkelem.attr('href'));\r\n            } else {\r\n                // 当前选区不在链接里面\r\n                if (editor.selection.isSelectionEmpty()) {\r\n                    // 选区是空的，未选中内容\r\n                    this._createPanel('', '');\r\n                } else {\r\n                    // 选中内容了\r\n                    this._createPanel(editor.selection.getSelectionText(), '');\r\n                }\r\n            }\r\n        },\r\n\r\n        // 创建 panel\r\n        _createPanel: function _createPanel(text, link) {\r\n            var _this = this;\r\n\r\n            // panel 中需要用到的id\r\n            var inputLinkId = getRandom('input-link');\r\n            var inputTextId = getRandom('input-text');\r\n            var btnOkId = getRandom('btn-ok');\r\n            var btnDelId = getRandom('btn-del');\r\n\r\n            // 是否显示“删除链接”\r\n            var delBtnDisplay = this._active ? 'inline-block' : 'none';\r\n\r\n            // 初始化并显示 panel\r\n            var panel = new Panel(this, {\r\n                width: 300,\r\n                // panel 中可包含多个 tab\r\n                tabs: [{\r\n                    // tab 的标题\r\n                    title: '链接',\r\n                    // 模板\r\n                    tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\r\n                    // 事件绑定\r\n                    events: [\r\n                        // 插入链接\r\n                        {\r\n                            selector: '#' + btnOkId,\r\n                            type: 'click',\r\n                            fn: function fn() {\r\n                                // 执行插入链接\r\n                                var $link = $('#' + inputLinkId);\r\n                                var $text = $('#' + inputTextId);\r\n                                var link = $link.val();\r\n                                var text = $text.val();\r\n                                _this._insertLink(text, link);\r\n\r\n                                // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                                return true;\r\n                            }\r\n                        },\r\n                        // 删除链接\r\n                        {\r\n                            selector: '#' + btnDelId,\r\n                            type: 'click',\r\n                            fn: function fn() {\r\n                                // 执行删除链接\r\n                                _this._delLink();\r\n\r\n                                // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                                return true;\r\n                            }\r\n                        }]\r\n                } // tab end\r\n                ] // tabs end\r\n            });\r\n\r\n            // 显示 panel\r\n            panel.show();\r\n\r\n            // 记录属性\r\n            this.panel = panel;\r\n        },\r\n\r\n        // 删除当前链接\r\n        _delLink: function _delLink() {\r\n            if (!this._active) {\r\n                return;\r\n            }\r\n            var editor = this.editor;\r\n            var $selectionELem = editor.selection.getSelectionContainerElem();\r\n            if (!$selectionELem) {\r\n                return;\r\n            }\r\n            var selectionText = editor.selection.getSelectionText();\r\n            editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\r\n        },\r\n\r\n        // 插入链接\r\n        _insertLink: function _insertLink(text, link) {\r\n            var editor = this.editor;\r\n            var config = editor.config;\r\n            var linkCheck = config.linkCheck;\r\n            var checkResult = true; // 默认为 true\r\n            if (linkCheck && typeof linkCheck === 'function') {\r\n                checkResult = linkCheck(text, link);\r\n            }\r\n            if (checkResult === true) {\r\n                editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\r\n            } else {\r\n                alert(checkResult);\r\n            }\r\n        },\r\n\r\n        // 试图改变 active 状态\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            var $selectionELem = editor.selection.getSelectionContainerElem();\r\n            if (!$selectionELem) {\r\n                return;\r\n            }\r\n            if ($selectionELem.getNodeName() === 'A') {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    italic-menu\r\n*/\r\n\r\n// 构造函数\r\n    function Italic(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\">\\n   <i class=\"w-e-icon-italic\"></i>\\n        </div>');\r\n        this.type = 'click';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Italic.prototype = {\r\n        constructor: Italic,\r\n\r\n        // 点击事件\r\n        onClick: function onClick(e) {\r\n            // 点击菜单将触发这里\r\n\r\n            var editor = this.editor;\r\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\r\n\r\n            if (isSeleEmpty) {\r\n                // 选区是空的，插入并选中一个“空白”\r\n                editor.selection.createEmptyRange();\r\n            }\r\n\r\n            // 执行 italic 命令\r\n            editor.cmd.do('italic');\r\n\r\n            if (isSeleEmpty) {\r\n                // 需要将选取折叠起来\r\n                editor.selection.collapseRange();\r\n                editor.selection.restoreSelection();\r\n            }\r\n        },\r\n\r\n        // 试图改变 active 状态\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            if (editor.cmd.queryCommandState('italic')) {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    redo-menu\r\n*/\r\n\r\n// 构造函数\r\n    function Redo(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\r\n        this.type = 'click';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Redo.prototype = {\r\n        constructor: Redo,\r\n\r\n        // 点击事件\r\n        onClick: function onClick(e) {\r\n            // 点击菜单将触发这里\r\n\r\n            var editor = this.editor;\r\n\r\n            // 执行 redo 命令\r\n            editor.cmd.do('redo');\r\n        }\r\n    };\r\n\r\n    /*\r\n    strikeThrough-menu\r\n*/\r\n\r\n// 构造函数\r\n    function StrikeThrough(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\r\n        this.type = 'click';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    StrikeThrough.prototype = {\r\n        constructor: StrikeThrough,\r\n\r\n        // 点击事件\r\n        onClick: function onClick(e) {\r\n            // 点击菜单将触发这里\r\n\r\n            var editor = this.editor;\r\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\r\n\r\n            if (isSeleEmpty) {\r\n                // 选区是空的，插入并选中一个“空白”\r\n                editor.selection.createEmptyRange();\r\n            }\r\n\r\n            // 执行 strikeThrough 命令\r\n            editor.cmd.do('strikeThrough');\r\n\r\n            if (isSeleEmpty) {\r\n                // 需要将选取折叠起来\r\n                editor.selection.collapseRange();\r\n                editor.selection.restoreSelection();\r\n            }\r\n        },\r\n\r\n        // 试图改变 active 状态\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            if (editor.cmd.queryCommandState('strikeThrough')) {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    underline-menu\r\n*/\r\n\r\n// 构造函数\r\n    function Underline(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\r\n        this.type = 'click';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Underline.prototype = {\r\n        constructor: Underline,\r\n\r\n        // 点击事件\r\n        onClick: function onClick(e) {\r\n            // 点击菜单将触发这里\r\n\r\n            var editor = this.editor;\r\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\r\n\r\n            if (isSeleEmpty) {\r\n                // 选区是空的，插入并选中一个“空白”\r\n                editor.selection.createEmptyRange();\r\n            }\r\n\r\n            // 执行 underline 命令\r\n            editor.cmd.do('underline');\r\n\r\n            if (isSeleEmpty) {\r\n                // 需要将选取折叠起来\r\n                editor.selection.collapseRange();\r\n                editor.selection.restoreSelection();\r\n            }\r\n        },\r\n\r\n        // 试图改变 active 状态\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            if (editor.cmd.queryCommandState('underline')) {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    undo-menu\r\n*/\r\n\r\n// 构造函数\r\n    function Undo(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\r\n        this.type = 'click';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Undo.prototype = {\r\n        constructor: Undo,\r\n\r\n        // 点击事件\r\n        onClick: function onClick(e) {\r\n            // 点击菜单将触发这里\r\n\r\n            var editor = this.editor;\r\n\r\n            // 执行 undo 命令\r\n            editor.cmd.do('undo');\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - list\r\n*/\r\n\r\n// 构造函数\r\n    function List(editor) {\r\n        var _this = this;\r\n\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-unorderedlist\"></i></div>');\r\n        this.type = 'droplist';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n\r\n        // 初始化 droplist\r\n        this.droplist = new DropList(this, {\r\n            width: 120,\r\n            $title: $('<p>设置列表</p>'),\r\n            type: 'list', // droplist 以列表形式展示\r\n            list: [{\r\n                $elem: $('<span><i class=\"w-e-icon-orderedlist\"></i> 有序列表</span>'),\r\n                value: 'insertOrderedList'\r\n            }, {$elem: $('<span><i class=\"w-e-icon-unorderedlist\"></i> 无序列表</span>'), value: 'insertUnorderedList'}],\r\n            onClick: function onClick(value) {\r\n                // 注意 this 是指向当前的 List 对象\r\n                _this._command(value);\r\n            }\r\n        });\r\n    }\r\n\r\n// 原型\r\n    List.prototype = {\r\n        constructor: List,\r\n\r\n        // 执行命令\r\n        _command: function _command(value) {\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n            editor.selection.restoreSelection();\r\n            if (editor.cmd.queryCommandState(value)) {\r\n                return;\r\n            }\r\n            editor.cmd.do(value);\r\n\r\n            // 验证列表是否被包裹在 <p> 之内\r\n            var $selectionElem = editor.selection.getSelectionContainerElem();\r\n            if ($selectionElem.getNodeName() === 'LI') {\r\n                $selectionElem = $selectionElem.parent();\r\n            }\r\n            if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\r\n                return;\r\n            }\r\n            if ($selectionElem.equal($textElem)) {\r\n                // 证明是顶级标签，没有被 <p> 包裹\r\n                return;\r\n            }\r\n            var $parent = $selectionElem.parent();\r\n            if ($parent.equal($textElem)) {\r\n                // $parent 是顶级标签，不能删除\r\n                return;\r\n            }\r\n\r\n            $selectionElem.insertAfter($parent);\r\n            $parent.remove();\r\n        },\r\n\r\n        // 试图改变 active 状态\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - justify\r\n*/\r\n\r\n// 构造函数\r\n    function Justify(editor) {\r\n        var _this = this;\r\n\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-align-left\"></i></div>');\r\n        this.type = 'droplist';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n\r\n        // 初始化 droplist\r\n        this.droplist = new DropList(this, {\r\n            width: 100,\r\n            $title: $('<p>对齐方式</p>'),\r\n            type: 'list', // droplist 以列表形式展示\r\n            list: [{$elem: $('<span><i class=\"w-e-icon-align-left\"></i> 靠左</span>'), value: 'justifyLeft'},\r\n                {$elem: $('<span><i class=\"w-e-icon-align-center\"></i> 居中</span>'), value: 'justifyCenter'},\r\n                {$elem: $('<span><i class=\"w-e-icon-align-right\"></i> 靠右</span>'), value: 'justifyRight'}],\r\n            onClick: function onClick(value) {\r\n                // 注意 this 是指向当前的 List 对象\r\n                _this._command(value);\r\n            }\r\n        });\r\n    }\r\n\r\n// 原型\r\n    Justify.prototype = {\r\n        constructor: Justify,\r\n\r\n        // 执行命令\r\n        _command: function _command(value) {\r\n            var editor = this.editor;\r\n            editor.cmd.do(value);\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - Forecolor\r\n*/\r\n\r\n// 构造函数\r\n    function ForeColor(editor) {\r\n        var _this = this;\r\n\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font-colors\"></i></div>');\r\n        this.type = 'droplist';\r\n\r\n        // 获取配置的颜色\r\n        var config = editor.config;\r\n        var colors = config.colors || [];\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n\r\n        // 初始化 droplist\r\n        this.droplist = new DropList(this, {\r\n            width: 120,\r\n            $title: $('<p>文字颜色</p>'),\r\n            type: 'inline-block', // droplist 内容以 block 形式展示\r\n            list: colors.map(function (color) {\r\n                if (color === '#ffffff') {\r\n                    return {\r\n                        $elem: $('<span style=\"background-color:' + color + ';border:1px solid #e8e8e8\" class=\"color-block\"></span>'),\r\n                        value: color\r\n                    };\r\n                } else {\r\n                    return {\r\n                        $elem: $('<span style=\"background-color:' + color + ';\" class=\"color-block\"></span>'),\r\n                        value: color\r\n                    };\r\n                }\r\n            }),\r\n            onClick: function onClick(value) {\r\n                // 注意 this 是指向当前的 ForeColor 对象\r\n                _this._command(value);\r\n            }\r\n        });\r\n    }\r\n\r\n// 原型\r\n    ForeColor.prototype = {\r\n        constructor: ForeColor,\r\n\r\n        // 执行命令\r\n        _command: function _command(value) {\r\n            var editor = this.editor;\r\n            editor.cmd.do('foreColor', value);\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - BackColor\r\n*/\r\n\r\n// 构造函数\r\n    function BackColor(editor) {\r\n        var _this = this;\r\n\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-bg-colors\"></i></div>');\r\n        this.type = 'droplist';\r\n\r\n        // 获取配置的颜色\r\n        var config = editor.config;\r\n        var colors = config.colors || [];\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n\r\n        // 初始化 droplist\r\n        this.droplist = new DropList(this, {\r\n            width: 120,\r\n            $title: $('<p>背景色</p>'),\r\n            type: 'inline-block', // droplist 内容以 block 形式展示\r\n            list: colors.map(function (color) {\r\n                if (color === '#ffffff') {\r\n                    return {\r\n                        $elem: $('<span style=\"background-color:' + color + ';border:1px solid #e8e8e8\" class=\"color-block\"></span>'),\r\n                        value: color\r\n                    };\r\n                } else {\r\n                    return {\r\n                        $elem: $('<span style=\"background-color:' + color + ';\" class=\"color-block\"></span>'),\r\n                        value: color\r\n                    };\r\n                }\r\n\r\n            }),\r\n            onClick: function onClick(value) {\r\n                // 注意 this 是指向当前的 BackColor 对象\r\n                _this._command(value);\r\n            }\r\n        });\r\n    }\r\n\r\n// 原型\r\n    BackColor.prototype = {\r\n        constructor: BackColor,\r\n\r\n        // 执行命令\r\n        _command: function _command(value) {\r\n            var editor = this.editor;\r\n            editor.cmd.do('backColor', value);\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - quote\r\n*/\r\n\r\n// 构造函数\r\n    function Quote(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-block\"></i>\\n        </div>');\r\n        this.type = 'click';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Quote.prototype = {\r\n        constructor: Quote,\r\n\r\n        onClick: function onClick(e) {\r\n            var editor = this.editor;\r\n            var $selectionElem = editor.selection.getSelectionContainerElem();\r\n            var nodeName = $selectionElem.getNodeName();\r\n\r\n            if (!UA.isIE()) {\r\n                if (nodeName === 'BLOCKQUOTE') {\r\n                    // 撤销 quote\r\n                    editor.cmd.do('formatBlock', '<P>');\r\n                } else {\r\n                    // 转换为 quote\r\n                    editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\r\n                }\r\n                return;\r\n            }\r\n\r\n            // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\r\n            var content = void 0,\r\n                $targetELem = void 0;\r\n            if (nodeName === 'P') {\r\n                // 将 P 转换为 quote\r\n                content = $selectionElem.text();\r\n                $targetELem = $('<blockquote>' + content + '</blockquote>');\r\n                $targetELem.insertAfter($selectionElem);\r\n                $selectionElem.remove();\r\n                return;\r\n            }\r\n            if (nodeName === 'BLOCKQUOTE') {\r\n                // 撤销 quote\r\n                content = $selectionElem.text();\r\n                $targetELem = $('<p>' + content + '</p>');\r\n                $targetELem.insertAfter($selectionElem);\r\n                $selectionElem.remove();\r\n            }\r\n        },\r\n\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            var reg = /^BLOCKQUOTE$/i;\r\n            var cmdValue = editor.cmd.queryCommandValue('formatBlock');\r\n            if (reg.test(cmdValue)) {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - code\r\n*/\r\n\r\n// 构造函数\r\n    function Code(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-code\"></i>\\n        </div>');\r\n        this.type = 'panel';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Code.prototype = {\r\n        constructor: Code,\r\n\r\n        onClick: function onClick(e) {\r\n            var editor = this.editor;\r\n            var $startElem = editor.selection.getSelectionStartElem();\r\n            var $endElem = editor.selection.getSelectionEndElem();\r\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\r\n            var selectionText = editor.selection.getSelectionText();\r\n            var $code = void 0;\r\n\r\n            if (!$startElem.equal($endElem)) {\r\n                // 跨元素选择，不做处理\r\n                editor.selection.restoreSelection();\r\n                return;\r\n            }\r\n            if (!isSeleEmpty) {\r\n                // 选取不是空，用 <code> 包裹即可\r\n                $code = $('<code>' + selectionText + '</code>');\r\n                editor.cmd.do('insertElem', $code);\r\n                editor.selection.createRangeByElem($code, false);\r\n                editor.selection.restoreSelection();\r\n                return;\r\n            }\r\n\r\n            // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\r\n            if (this._active) {\r\n                // 选中状态，将编辑内容\r\n                this._createPanel($startElem.html());\r\n            } else {\r\n                // 未选中状态，将创建内容\r\n                this._createPanel();\r\n            }\r\n        },\r\n\r\n        _createPanel: function _createPanel(value) {\r\n            var _this = this;\r\n\r\n            // value - 要编辑的内容\r\n            value = value || '';\r\n            var type = !value ? 'new' : 'edit';\r\n            var textId = getRandom('texxt');\r\n            var btnId = getRandom('btn');\r\n\r\n            var panel = new Panel(this, {\r\n                width: 500,\r\n                // 一个 Panel 包含多个 tab\r\n                tabs: [{\r\n                    // 标题\r\n                    title: '插入代码',\r\n                    // 模板\r\n                    tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\r\n                    // 事件绑定\r\n                    events: [\r\n                        // 插入代码\r\n                        {\r\n                            selector: '#' + btnId,\r\n                            type: 'click',\r\n                            fn: function fn() {\r\n                                var $text = $('#' + textId);\r\n                                var text = $text.val() || $text.html();\r\n                                text = replaceHtmlSymbol(text);\r\n                                if (type === 'new') {\r\n                                    // 新插入\r\n                                    _this._insertCode(text);\r\n                                } else {\r\n                                    // 编辑更新\r\n                                    _this._updateCode(text);\r\n                                }\r\n\r\n                                // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                                return true;\r\n                            }\r\n                        }]\r\n                } // first tab end\r\n                ] // tabs end\r\n            }); // new Panel end\r\n\r\n            // 显示 panel\r\n            panel.show();\r\n\r\n            // 记录属性\r\n            this.panel = panel;\r\n        },\r\n\r\n        // 插入代码\r\n        _insertCode: function _insertCode(value) {\r\n            var editor = this.editor;\r\n            editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\r\n        },\r\n\r\n        // 更新代码\r\n        _updateCode: function _updateCode(value) {\r\n            var editor = this.editor;\r\n            var $selectionELem = editor.selection.getSelectionContainerElem();\r\n            if (!$selectionELem) {\r\n                return;\r\n            }\r\n            $selectionELem.html(value);\r\n            editor.selection.restoreSelection();\r\n        },\r\n\r\n        // 试图改变 active 状态\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            var $selectionELem = editor.selection.getSelectionContainerElem();\r\n            if (!$selectionELem) {\r\n                return;\r\n            }\r\n            var $parentElem = $selectionELem.parent();\r\n            if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - emoticon\r\n*/\r\n\r\n// 构造函数\r\n    function Emoticon(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-smile\"></i>\\n        </div>');\r\n        this.type = 'panel';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Emoticon.prototype = {\r\n        constructor: Emoticon,\r\n\r\n        onClick: function onClick() {\r\n            this._createPanel();\r\n        },\r\n\r\n        _createPanel: function _createPanel() {\r\n            var _this = this;\r\n\r\n            var editor = this.editor;\r\n            var config = editor.config;\r\n            // 获取表情配置\r\n            var emotions = config.emotions || [];\r\n\r\n            // 创建表情 dropPanel 的配置\r\n            var tabConfig = [];\r\n            emotions.forEach(function (emotData) {\r\n                var emotType = emotData.type;\r\n                var content = emotData.content || [];\r\n\r\n                // 这一组表情最终拼接出来的 html\r\n                var faceHtml = '';\r\n\r\n                // emoji 表情\r\n                if (emotType === 'emoji') {\r\n                    content.forEach(function (item) {\r\n                        if (item) {\r\n                            faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\r\n                        }\r\n                    });\r\n                }\r\n                // 图片表情\r\n                if (emotType === 'image') {\r\n                    content.forEach(function (item) {\r\n                        var src = item.src;\r\n                        var alt = item.alt;\r\n                        if (src) {\r\n                            // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\r\n                            faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\r\n                        }\r\n                    });\r\n                }\r\n\r\n                tabConfig.push({\r\n                    title: emotData.title,\r\n                    tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\r\n                    events: [{\r\n                        selector: 'span.w-e-item',\r\n                        type: 'click',\r\n                        fn: function fn(e) {\r\n                            var target = e.target;\r\n                            var $target = $(target);\r\n                            var nodeName = $target.getNodeName();\r\n\r\n                            var insertHtml = void 0;\r\n                            if (nodeName === 'IMG') {\r\n                                // 插入图片\r\n                                insertHtml = $target.parent().html();\r\n                            } else {\r\n                                // 插入 emoji\r\n                                insertHtml = '<span>' + $target.html() + '</span>';\r\n                            }\r\n\r\n                            _this._insert(insertHtml);\r\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                            return true;\r\n                        }\r\n                    }]\r\n                });\r\n            });\r\n\r\n            var panel = new Panel(this, {\r\n                width: 300,\r\n                height: 200,\r\n                // 一个 Panel 包含多个 tab\r\n                tabs: tabConfig\r\n            });\r\n\r\n            // 显示 panel\r\n            panel.show();\r\n\r\n            // 记录属性\r\n            this.panel = panel;\r\n        },\r\n\r\n        // 插入表情\r\n        _insert: function _insert(emotHtml) {\r\n            var editor = this.editor;\r\n            editor.cmd.do('insertHTML', emotHtml);\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - table\r\n*/\r\n\r\n// 构造函数\r\n    function Table(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table\"></i></div>');\r\n        this.type = 'panel';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Table.prototype = {\r\n        constructor: Table,\r\n\r\n        onClick: function onClick() {\r\n            if (this._active) {\r\n                // 编辑现有表格\r\n                this._createEditPanel();\r\n            } else {\r\n                // 插入新表格\r\n                this._createInsertPanel();\r\n            }\r\n        },\r\n\r\n        // 创建插入新表格的 panel\r\n        _createInsertPanel: function _createInsertPanel() {\r\n            var _this = this;\r\n\r\n            // 用到的 id\r\n            var btnInsertId = getRandom('btn');\r\n            var textRowNum = getRandom('row');\r\n            var textColNum = getRandom('col');\r\n\r\n            var panel = new Panel(this, {\r\n                width: 250,\r\n                // panel 包含多个 tab\r\n                tabs: [{\r\n                    // 标题\r\n                    title: '插入表格',\r\n                    // 模板\r\n                    tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\r\n                    // 事件绑定\r\n                    events: [{\r\n                        // 点击按钮，插入表格\r\n                        selector: '#' + btnInsertId,\r\n                        type: 'click',\r\n                        fn: function fn() {\r\n                            var rowNum = parseInt($('#' + textRowNum).val());\r\n                            var colNum = parseInt($('#' + textColNum).val());\r\n\r\n                            if (rowNum && colNum && rowNum > 0 && colNum > 0) {\r\n                                // form 数据有效\r\n                                _this._insert(rowNum, colNum);\r\n                            }\r\n\r\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                            return true;\r\n                        }\r\n                    }]\r\n                } // first tab end\r\n                ] // tabs end\r\n            }); // panel end\r\n\r\n            // 展示 panel\r\n            panel.show();\r\n\r\n            // 记录属性\r\n            this.panel = panel;\r\n        },\r\n\r\n        // 插入表格\r\n        _insert: function _insert(rowNum, colNum) {\r\n            // 拼接 table 模板\r\n            var r = void 0,\r\n                c = void 0;\r\n            var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\r\n            for (r = 0; r < rowNum; r++) {\r\n                html += '<tr>';\r\n                if (r === 0) {\r\n                    for (c = 0; c < colNum; c++) {\r\n                        html += '<th>&nbsp;</th>';\r\n                    }\r\n                } else {\r\n                    for (c = 0; c < colNum; c++) {\r\n                        html += '<td>&nbsp;</td>';\r\n                    }\r\n                }\r\n                html += '</tr>';\r\n            }\r\n            html += '</table><p><br></p>';\r\n\r\n            // 执行命令\r\n            var editor = this.editor;\r\n            editor.cmd.do('insertHTML', html);\r\n\r\n            // 防止 firefox 下出现 resize 的控制点\r\n            editor.cmd.do('enableObjectResizing', false);\r\n            editor.cmd.do('enableInlineTableEditing', false);\r\n        },\r\n\r\n        // 创建编辑表格的 panel\r\n        _createEditPanel: function _createEditPanel() {\r\n            var _this2 = this;\r\n\r\n            // 可用的 id\r\n            var addRowBtnId = getRandom('add-row');\r\n            var addColBtnId = getRandom('add-col');\r\n            var delRowBtnId = getRandom('del-row');\r\n            var delColBtnId = getRandom('del-col');\r\n            var delTableBtnId = getRandom('del-table');\r\n\r\n            // 创建 panel 对象\r\n            var panel = new Panel(this, {\r\n                width: 320,\r\n                // panel 包含多个 tab\r\n                tabs: [{\r\n                    // 标题\r\n                    title: '编辑表格',\r\n                    // 模板\r\n                    tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\r\n                    // 事件绑定\r\n                    events: [{\r\n                        // 增加行\r\n                        selector: '#' + addRowBtnId,\r\n                        type: 'click',\r\n                        fn: function fn() {\r\n                            _this2._addRow();\r\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                            return true;\r\n                        }\r\n                    }, {\r\n                        // 增加列\r\n                        selector: '#' + addColBtnId,\r\n                        type: 'click',\r\n                        fn: function fn() {\r\n                            _this2._addCol();\r\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                            return true;\r\n                        }\r\n                    }, {\r\n                        // 删除行\r\n                        selector: '#' + delRowBtnId,\r\n                        type: 'click',\r\n                        fn: function fn() {\r\n                            _this2._delRow();\r\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                            return true;\r\n                        }\r\n                    }, {\r\n                        // 删除列\r\n                        selector: '#' + delColBtnId,\r\n                        type: 'click',\r\n                        fn: function fn() {\r\n                            _this2._delCol();\r\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                            return true;\r\n                        }\r\n                    }, {\r\n                        // 删除表格\r\n                        selector: '#' + delTableBtnId,\r\n                        type: 'click',\r\n                        fn: function fn() {\r\n                            _this2._delTable();\r\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                            return true;\r\n                        }\r\n                    }]\r\n                }]\r\n            });\r\n            // 显示 panel\r\n            panel.show();\r\n        },\r\n\r\n        // 获取选中的单元格的位置信息\r\n        _getLocationData: function _getLocationData() {\r\n            var result = {};\r\n            var editor = this.editor;\r\n            var $selectionELem = editor.selection.getSelectionContainerElem();\r\n            if (!$selectionELem) {\r\n                return;\r\n            }\r\n            var nodeName = $selectionELem.getNodeName();\r\n            if (nodeName !== 'TD' && nodeName !== 'TH') {\r\n                return;\r\n            }\r\n\r\n            // 获取 td index\r\n            var $tr = $selectionELem.parent();\r\n            var $tds = $tr.children();\r\n            var tdLength = $tds.length;\r\n            $tds.forEach(function (td, index) {\r\n                if (td === $selectionELem[0]) {\r\n                    // 记录并跳出循环\r\n                    result.td = {\r\n                        index: index,\r\n                        elem: td,\r\n                        length: tdLength\r\n                    };\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            // 获取 tr index\r\n            var $tbody = $tr.parent();\r\n            var $trs = $tbody.children();\r\n            var trLength = $trs.length;\r\n            $trs.forEach(function (tr, index) {\r\n                if (tr === $tr[0]) {\r\n                    // 记录并跳出循环\r\n                    result.tr = {\r\n                        index: index,\r\n                        elem: tr,\r\n                        length: trLength\r\n                    };\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            // 返回结果\r\n            return result;\r\n        },\r\n\r\n        // 增加行\r\n        _addRow: function _addRow() {\r\n            // 获取当前单元格的位置信息\r\n            var locationData = this._getLocationData();\r\n            if (!locationData) {\r\n                return;\r\n            }\r\n            var trData = locationData.tr;\r\n            var $currentTr = $(trData.elem);\r\n            var tdData = locationData.td;\r\n            var tdLength = tdData.length;\r\n\r\n            // 拼接即将插入的字符串\r\n            var newTr = document.createElement('tr');\r\n            var tpl = '',\r\n                i = void 0;\r\n            for (i = 0; i < tdLength; i++) {\r\n                tpl += '<td>&nbsp;</td>';\r\n            }\r\n            newTr.innerHTML = tpl;\r\n            // 插入\r\n            $(newTr).insertAfter($currentTr);\r\n        },\r\n\r\n        // 增加列\r\n        _addCol: function _addCol() {\r\n            // 获取当前单元格的位置信息\r\n            var locationData = this._getLocationData();\r\n            if (!locationData) {\r\n                return;\r\n            }\r\n            var trData = locationData.tr;\r\n            var tdData = locationData.td;\r\n            var tdIndex = tdData.index;\r\n            var $currentTr = $(trData.elem);\r\n            var $trParent = $currentTr.parent();\r\n            var $trs = $trParent.children();\r\n\r\n            // 遍历所有行\r\n            $trs.forEach(function (tr) {\r\n                var $tr = $(tr);\r\n                var $tds = $tr.children();\r\n                var $currentTd = $tds.get(tdIndex);\r\n                var name = $currentTd.getNodeName().toLowerCase();\r\n\r\n                // new 一个 td，并插入\r\n                var newTd = document.createElement(name);\r\n                $(newTd).insertAfter($currentTd);\r\n            });\r\n        },\r\n\r\n        // 删除行\r\n        _delRow: function _delRow() {\r\n            // 获取当前单元格的位置信息\r\n            var locationData = this._getLocationData();\r\n            if (!locationData) {\r\n                return;\r\n            }\r\n            var trData = locationData.tr;\r\n            var $currentTr = $(trData.elem);\r\n            $currentTr.remove();\r\n        },\r\n\r\n        // 删除列\r\n        _delCol: function _delCol() {\r\n            // 获取当前单元格的位置信息\r\n            var locationData = this._getLocationData();\r\n            if (!locationData) {\r\n                return;\r\n            }\r\n            var trData = locationData.tr;\r\n            var tdData = locationData.td;\r\n            var tdIndex = tdData.index;\r\n            var $currentTr = $(trData.elem);\r\n            var $trParent = $currentTr.parent();\r\n            var $trs = $trParent.children();\r\n\r\n            // 遍历所有行\r\n            $trs.forEach(function (tr) {\r\n                var $tr = $(tr);\r\n                var $tds = $tr.children();\r\n                var $currentTd = $tds.get(tdIndex);\r\n                // 删除\r\n                $currentTd.remove();\r\n            });\r\n        },\r\n\r\n        // 删除表格\r\n        _delTable: function _delTable() {\r\n            var editor = this.editor;\r\n            var $selectionELem = editor.selection.getSelectionContainerElem();\r\n            if (!$selectionELem) {\r\n                return;\r\n            }\r\n            var $table = $selectionELem.parentUntil('table');\r\n            if (!$table) {\r\n                return;\r\n            }\r\n            $table.remove();\r\n        },\r\n\r\n        // 试图改变 active 状态\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            var $selectionELem = editor.selection.getSelectionContainerElem();\r\n            if (!$selectionELem) {\r\n                return;\r\n            }\r\n            var nodeName = $selectionELem.getNodeName();\r\n            if (nodeName === 'TD' || nodeName === 'TH') {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - video\r\n*/\r\n\r\n// 构造函数\r\n    function Video(editor) {\r\n        this.editor = editor;\r\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-video\"></i></div>');\r\n        this.type = 'panel';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Video.prototype = {\r\n        constructor: Video,\r\n\r\n        onClick: function onClick() {\r\n            this._createPanel();\r\n        },\r\n\r\n        _createPanel: function _createPanel() {\r\n            var _this = this;\r\n\r\n            // 创建 id\r\n            var textValId = getRandom('text-val');\r\n            var btnId = getRandom('btn');\r\n\r\n            // 创建 panel\r\n            var panel = new Panel(this, {\r\n                width: 350,\r\n                // 一个 panel 多个 tab\r\n                tabs: [{\r\n                    // 标题\r\n                    title: '插入视频',\r\n                    // 模板\r\n                    tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\r\n                    // 事件绑定\r\n                    events: [{\r\n                        selector: '#' + btnId,\r\n                        type: 'click',\r\n                        fn: function fn() {\r\n                            var $text = $('#' + textValId);\r\n                            var val = $text.val().trim();\r\n\r\n                            // 测试用视频地址\r\n                            // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\r\n\r\n                            if (val) {\r\n                                // 插入视频\r\n                                _this._insert(val);\r\n                            }\r\n\r\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                            return true;\r\n                        }\r\n                    }]\r\n                } // first tab end\r\n                ] // tabs end\r\n            }); // panel end\r\n\r\n            // 显示 panel\r\n            panel.show();\r\n\r\n            // 记录属性\r\n            this.panel = panel;\r\n        },\r\n\r\n        // 插入视频\r\n        _insert: function _insert(val) {\r\n            var editor = this.editor;\r\n            editor.cmd.do('insertHTML', val + '<p><br></p>');\r\n        }\r\n    };\r\n\r\n    /*\r\n    menu - img\r\n*/\r\n\r\n// 构造函数\r\n    function Image(editor) {\r\n        this.editor = editor;\r\n        var imgMenuId = getRandom('w-e-img');\r\n        this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\r\n        editor.imgMenuId = imgMenuId;\r\n        this.type = 'panel';\r\n\r\n        // 当前是否 active 状态\r\n        this._active = false;\r\n    }\r\n\r\n// 原型\r\n    Image.prototype = {\r\n        constructor: Image,\r\n\r\n        onClick: function onClick() {\r\n            var editor = this.editor;\r\n            var config = editor.config;\r\n            if (config.qiniu) {\r\n                return;\r\n            }\r\n            if (this._active) {\r\n                this._createEditPanel();\r\n            } else {\r\n                this._createInsertPanel();\r\n            }\r\n        },\r\n\r\n        _createEditPanel: function _createEditPanel() {\r\n            var editor = this.editor;\r\n\r\n            // id\r\n            var width30 = getRandom('width-30');\r\n            var width50 = getRandom('width-50');\r\n            var width100 = getRandom('width-100');\r\n            var delBtn = getRandom('del-btn');\r\n\r\n            // tab 配置\r\n            var tabsConfig = [{\r\n                title: '编辑图片',\r\n                tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\r\n                events: [{\r\n                    selector: '#' + width30,\r\n                    type: 'click',\r\n                    fn: function fn() {\r\n                        var $img = editor._selectedImg;\r\n                        if ($img) {\r\n                            $img.css('max-width', '30%');\r\n                        }\r\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                        return true;\r\n                    }\r\n                }, {\r\n                    selector: '#' + width50,\r\n                    type: 'click',\r\n                    fn: function fn() {\r\n                        var $img = editor._selectedImg;\r\n                        if ($img) {\r\n                            $img.css('max-width', '50%');\r\n                        }\r\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                        return true;\r\n                    }\r\n                }, {\r\n                    selector: '#' + width100,\r\n                    type: 'click',\r\n                    fn: function fn() {\r\n                        var $img = editor._selectedImg;\r\n                        if ($img) {\r\n                            $img.css('max-width', '100%');\r\n                        }\r\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                        return true;\r\n                    }\r\n                }, {\r\n                    selector: '#' + delBtn,\r\n                    type: 'click',\r\n                    fn: function fn() {\r\n                        var $img = editor._selectedImg;\r\n                        if ($img) {\r\n                            $img.remove();\r\n                        }\r\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\r\n                        return true;\r\n                    }\r\n                }]\r\n            }];\r\n\r\n            // 创建 panel 并显示\r\n            var panel = new Panel(this, {\r\n                width: 300,\r\n                tabs: tabsConfig\r\n            });\r\n            panel.show();\r\n\r\n            // 记录属性\r\n            this.panel = panel;\r\n        },\r\n\r\n        _createInsertPanel: function _createInsertPanel() {\r\n            var editor = this.editor;\r\n            var uploadImg = editor.uploadImg;\r\n            var config = editor.config;\r\n\r\n            // id\r\n            var upTriggerId = getRandom('up-trigger');\r\n            var upFileId = getRandom('up-file');\r\n            var linkUrlId = getRandom('link-url');\r\n            var linkBtnId = getRandom('link-btn');\r\n\r\n            // tabs 的配置\r\n            var tabsConfig = [{\r\n                title: '上传图片',\r\n                tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-cloud-upload\"></i>\\n <div class=\"upload-text\">&#35831;&#36873;&#25321;&#22270;&#29255;&#24320;&#22987;&#19978;&#20256;</div>                   </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\r\n                events: [{\r\n                    // 触发选择图片\r\n                    selector: '#' + upTriggerId,\r\n                    type: 'click',\r\n                    fn: function fn() {\r\n                        var $file = $('#' + upFileId);\r\n                        var fileElem = $file[0];\r\n                        if (fileElem) {\r\n                            fileElem.click();\r\n                        } else {\r\n                            // 返回 true 可关闭 panel\r\n                            return true;\r\n                        }\r\n                    }\r\n                }, {\r\n                    // 选择图片完毕\r\n                    selector: '#' + upFileId,\r\n                    type: 'change',\r\n                    fn: function fn() {\r\n                        var $file = $('#' + upFileId);\r\n                        var fileElem = $file[0];\r\n                        if (!fileElem) {\r\n                            // 返回 true 可关闭 panel\r\n                            return true;\r\n                        }\r\n\r\n                        // 获取选中的 file 对象列表\r\n                        var fileList = fileElem.files;\r\n                        if (fileList.length) {\r\n                            uploadImg.uploadImg(fileList);\r\n                        }\r\n\r\n                        // 返回 true 可关闭 panel\r\n                        return true;\r\n                    }\r\n                }]\r\n            }, // first tab end\r\n                {\r\n                    title: '网络图片',\r\n                    tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\r\n                    events: [{\r\n                        selector: '#' + linkBtnId,\r\n                        type: 'click',\r\n                        fn: function fn() {\r\n                            var $linkUrl = $('#' + linkUrlId);\r\n                            var url = $linkUrl.val().trim();\r\n\r\n                            if (url) {\r\n                                uploadImg.insertLinkImg(url);\r\n                            }\r\n\r\n                            // 返回 true 表示函数执行结束之后关闭 panel\r\n                            return true;\r\n                        }\r\n                    }]\r\n                } // second tab end\r\n            ]; // tabs end\r\n\r\n            // 判断 tabs 的显示\r\n            var tabsConfigResult = [];\r\n            if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\r\n                // 显示“上传图片”\r\n                tabsConfigResult.push(tabsConfig[0]);\r\n            }\r\n            if (config.showLinkImg) {\r\n                // 显示“网络图片”\r\n                tabsConfigResult.push(tabsConfig[1]);\r\n            }\r\n\r\n            // 创建 panel 并显示\r\n            var panel = new Panel(this, {\r\n                width: 300,\r\n                tabs: tabsConfigResult\r\n            });\r\n            panel.show();\r\n\r\n            // 记录属性\r\n            this.panel = panel;\r\n        },\r\n\r\n        // 试图改变 active 状态\r\n        tryChangeActive: function tryChangeActive(e) {\r\n            var editor = this.editor;\r\n            var $elem = this.$elem;\r\n            if (editor._selectedImg) {\r\n                this._active = true;\r\n                $elem.addClass('w-e-active');\r\n            } else {\r\n                this._active = false;\r\n                $elem.removeClass('w-e-active');\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    所有菜单的汇总\r\n*/\r\n\r\n// 存储菜单的构造函数\r\n    var MenuConstructors = {};\r\n\r\n    MenuConstructors.bold = Bold;\r\n\r\n    MenuConstructors.head = Head;\r\n\r\n    MenuConstructors.fontSize = FontSize;\r\n\r\n    MenuConstructors.fontName = FontName;\r\n\r\n    MenuConstructors.link = Link;\r\n\r\n    MenuConstructors.italic = Italic;\r\n\r\n    MenuConstructors.redo = Redo;\r\n\r\n    MenuConstructors.strikeThrough = StrikeThrough;\r\n\r\n    MenuConstructors.underline = Underline;\r\n\r\n    MenuConstructors.undo = Undo;\r\n\r\n    MenuConstructors.list = List;\r\n\r\n    MenuConstructors.justify = Justify;\r\n\r\n    MenuConstructors.foreColor = ForeColor;\r\n\r\n    MenuConstructors.backColor = BackColor;\r\n\r\n    MenuConstructors.quote = Quote;\r\n\r\n    MenuConstructors.code = Code;\r\n\r\n    MenuConstructors.emoticon = Emoticon;\r\n\r\n    MenuConstructors.table = Table;\r\n\r\n    MenuConstructors.video = Video;\r\n\r\n    MenuConstructors.image = Image;\r\n\r\n    /*\r\n    菜单集合\r\n*/\r\n\r\n// 构造函数\r\n    function Menus(editor) {\r\n        this.editor = editor;\r\n        this.menus = {};\r\n    }\r\n\r\n// 修改原型\r\n    Menus.prototype = {\r\n        constructor: Menus,\r\n\r\n        // 初始化菜单\r\n        init: function init() {\r\n            var _this = this;\r\n\r\n            var editor = this.editor;\r\n            var config = editor.config || {};\r\n            var configMenus = config.menus || []; // 获取配置中的菜单\r\n\r\n            // 根据配置信息，创建菜单\r\n            configMenus.forEach(function (menuKey) {\r\n                var MenuConstructor = MenuConstructors[menuKey];\r\n                if (MenuConstructor && typeof MenuConstructor === 'function') {\r\n                    // 创建单个菜单\r\n                    _this.menus[menuKey] = new MenuConstructor(editor);\r\n                }\r\n            });\r\n\r\n            // 添加到菜单栏\r\n            this._addToToolbar();\r\n\r\n            // 绑定事件\r\n            this._bindEvent();\r\n        },\r\n\r\n        // 添加到菜单栏\r\n        _addToToolbar: function _addToToolbar() {\r\n            var editor = this.editor;\r\n            var $toolbarElem = editor.$toolbarElem;\r\n            var menus = this.menus;\r\n            var config = editor.config;\r\n            // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\r\n            var zIndex = config.zIndex + 1;\r\n            objForEach(menus, function (key, menu) {\r\n                var $elem = menu.$elem;\r\n                if ($elem) {\r\n                    // 设置 z-index\r\n                    $elem.css('z-index', zIndex);\r\n                    $toolbarElem.append($elem);\r\n                }\r\n            });\r\n        },\r\n\r\n        // 绑定菜单 click mouseenter 事件\r\n        _bindEvent: function _bindEvent() {\r\n            var menus = this.menus;\r\n            var editor = this.editor;\r\n            objForEach(menus, function (key, menu) {\r\n                var type = menu.type;\r\n                if (!type) {\r\n                    return;\r\n                }\r\n                var $elem = menu.$elem;\r\n                var droplist = menu.droplist;\r\n                var panel = menu.panel;\r\n\r\n                // 点击类型，例如 bold\r\n                if (type === 'click' && menu.onClick) {\r\n                    $elem.on('click', function (e) {\r\n                        if (editor.selection.getRange() == null) {\r\n                            return;\r\n                        }\r\n                        menu.onClick(e);\r\n                    });\r\n                }\r\n\r\n                // 下拉框，例如 head\r\n                if (type === 'droplist' && droplist) {\r\n                    $elem.on('mouseenter', function (e) {\r\n                        if (editor.selection.getRange() == null) {\r\n                            return;\r\n                        }\r\n                        // 显示\r\n                        droplist.showTimeoutId = setTimeout(function () {\r\n                            droplist.show();\r\n                        }, 200);\r\n                    }).on('mouseleave', function (e) {\r\n                        // 隐藏\r\n                        droplist.hideTimeoutId = setTimeout(function () {\r\n                            droplist.hide();\r\n                        }, 0);\r\n                    });\r\n                }\r\n\r\n                // 弹框类型，例如 link\r\n                if (type === 'panel' && menu.onClick) {\r\n                    $elem.on('click', function (e) {\r\n                        e.stopPropagation();\r\n                        if (editor.selection.getRange() == null) {\r\n                            return;\r\n                        }\r\n                        // 在自定义事件中显示 panel\r\n                        menu.onClick(e);\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        // 尝试修改菜单状态\r\n        changeActive: function changeActive() {\r\n            var menus = this.menus;\r\n            objForEach(menus, function (key, menu) {\r\n                if (menu.tryChangeActive) {\r\n                    setTimeout(function () {\r\n                        menu.tryChangeActive();\r\n                    }, 100);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /*\r\n    粘贴信息的处理\r\n*/\r\n\r\n// 获取粘贴的纯文本\r\n    function getPasteText(e) {\r\n        var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\r\n        var pasteText = void 0;\r\n        if (clipboardData == null) {\r\n            pasteText = window.clipboardData && window.clipboardData.getData('text');\r\n        } else {\r\n            pasteText = clipboardData.getData('text/plain');\r\n        }\r\n\r\n        return replaceHtmlSymbol(pasteText);\r\n    }\r\n\r\n// 获取粘贴的html\r\n    function getPasteHtml(e, filterStyle, ignoreImg) {\r\n        var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\r\n        var pasteText = void 0,\r\n            pasteHtml = void 0;\r\n        if (clipboardData == null) {\r\n            pasteText = window.clipboardData && window.clipboardData.getData('text');\r\n        } else {\r\n            pasteText = clipboardData.getData('text/plain');\r\n            pasteHtml = clipboardData.getData('text/html');\r\n        }\r\n        if (!pasteHtml && pasteText) {\r\n            pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\r\n        }\r\n        if (!pasteHtml) {\r\n            return;\r\n        }\r\n\r\n        // 过滤word中状态过来的无用字符\r\n        var docSplitHtml = pasteHtml.split('</html>');\r\n        if (docSplitHtml.length === 2) {\r\n            pasteHtml = docSplitHtml[0];\r\n        }\r\n\r\n        // 过滤无用标签\r\n        pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\r\n        // 去掉注释\r\n        pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\r\n        // 过滤 data-xxx 属性\r\n        pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\r\n\r\n        if (ignoreImg) {\r\n            // 忽略图片\r\n            pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\r\n        }\r\n\r\n        if (filterStyle) {\r\n            // 过滤样式\r\n            pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\r\n        } else {\r\n            // 保留样式\r\n            pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\r\n        }\r\n\r\n        return pasteHtml;\r\n    }\r\n\r\n// 获取粘贴的图片文件\r\n    function getPasteImgs(e) {\r\n        var result = [];\r\n        var txt = getPasteText(e);\r\n        if (txt) {\r\n            // 有文字，就忽略图片\r\n            return result;\r\n        }\r\n\r\n        var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\r\n        var items = clipboardData.items;\r\n        if (!items) {\r\n            return result;\r\n        }\r\n\r\n        objForEach(items, function (key, value) {\r\n            var type = value.type;\r\n            if (/image/i.test(type)) {\r\n                result.push(value.getAsFile());\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /*\r\n    编辑区域\r\n*/\r\n\r\n// 获取一个 elem.childNodes 的 JSON 数据\r\n    function getChildrenJSON($elem) {\r\n        var result = [];\r\n        var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\r\n        $children.forEach(function (curElem) {\r\n            var elemResult = void 0;\r\n            var nodeType = curElem.nodeType;\r\n\r\n            // 文本节点\r\n            if (nodeType === 3) {\r\n                elemResult = curElem.textContent;\r\n                elemResult = replaceHtmlSymbol(elemResult);\r\n            }\r\n\r\n            // 普通 DOM 节点\r\n            if (nodeType === 1) {\r\n                elemResult = {};\r\n\r\n                // tag\r\n                elemResult.tag = curElem.nodeName.toLowerCase();\r\n                // attr\r\n                var attrData = [];\r\n                var attrList = curElem.attributes || {};\r\n                var attrListLength = attrList.length || 0;\r\n                for (var i = 0; i < attrListLength; i++) {\r\n                    var attr = attrList[i];\r\n                    attrData.push({\r\n                        name: attr.name,\r\n                        value: attr.value\r\n                    });\r\n                }\r\n                elemResult.attrs = attrData;\r\n                // children（递归）\r\n                elemResult.children = getChildrenJSON($(curElem));\r\n            }\r\n\r\n            result.push(elemResult);\r\n        });\r\n        return result;\r\n    }\r\n\r\n// 构造函数\r\n    function Text(editor) {\r\n        this.editor = editor;\r\n    }\r\n\r\n// 修改原型\r\n    Text.prototype = {\r\n        constructor: Text,\r\n\r\n        // 初始化\r\n        init: function init() {\r\n            // 绑定事件\r\n            this._bindEvent();\r\n        },\r\n\r\n        // 清空内容\r\n        clear: function clear() {\r\n            this.html('<p><br></p>');\r\n        },\r\n\r\n        // 获取 设置 html\r\n        html: function html(val) {\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n            var html = void 0;\r\n            if (val == null) {\r\n                html = $textElem.html();\r\n                // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\r\n                html = html.replace(/\\u200b/gm, '');\r\n                return html;\r\n            } else {\r\n                $textElem.html(val);\r\n\r\n                // 初始化选取，将光标定位到内容尾部\r\n                editor.initSelection();\r\n            }\r\n        },\r\n\r\n        // 获取 JSON\r\n        getJSON: function getJSON() {\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n            return getChildrenJSON($textElem);\r\n        },\r\n\r\n        // 获取 设置 text\r\n        text: function text(val) {\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n            var text = void 0;\r\n            if (val == null) {\r\n                text = $textElem.text();\r\n                // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\r\n                text = text.replace(/\\u200b/gm, '');\r\n                return text;\r\n            } else {\r\n                $textElem.text('<p>' + val + '</p>');\r\n\r\n                // 初始化选取，将光标定位到内容尾部\r\n                editor.initSelection();\r\n            }\r\n        },\r\n\r\n        // 追加内容\r\n        append: function append(html) {\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n            $textElem.append($(html));\r\n\r\n            // 初始化选取，将光标定位到内容尾部\r\n            editor.initSelection();\r\n        },\r\n\r\n        // 绑定事件\r\n        _bindEvent: function _bindEvent() {\r\n            // 实时保存选取\r\n            this._saveRangeRealTime();\r\n\r\n            // 按回车建时的特殊处理\r\n            this._enterKeyHandle();\r\n\r\n            // 清空时保留 <p><br></p>\r\n            this._clearHandle();\r\n\r\n            // 粘贴事件（粘贴文字，粘贴图片）\r\n            this._pasteHandle();\r\n\r\n            // tab 特殊处理\r\n            this._tabHandle();\r\n\r\n            // img 点击\r\n            this._imgHandle();\r\n\r\n            // 拖拽事件\r\n            this._dragHandle();\r\n        },\r\n\r\n        // 实时保存选取\r\n        _saveRangeRealTime: function _saveRangeRealTime() {\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n\r\n            // 保存当前的选区\r\n            function saveRange(e) {\r\n                // 随时保存选区\r\n                editor.selection.saveRange();\r\n                // 更新按钮 ative 状态\r\n                editor.menus.changeActive();\r\n            }\r\n\r\n            // 按键后保存\r\n            $textElem.on('keyup', saveRange);\r\n            $textElem.on('mousedown', function (e) {\r\n                // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\r\n                $textElem.on('mouseleave', saveRange);\r\n            });\r\n            $textElem.on('mouseup', function (e) {\r\n                saveRange();\r\n                // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\r\n                $textElem.off('mouseleave', saveRange);\r\n            });\r\n        },\r\n\r\n        // 按回车键时的特殊处理\r\n        _enterKeyHandle: function _enterKeyHandle() {\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n\r\n            function insertEmptyP($selectionElem) {\r\n                var $p = $('<p><br></p>');\r\n                $p.insertBefore($selectionElem);\r\n                editor.selection.createRangeByElem($p, true);\r\n                editor.selection.restoreSelection();\r\n                $selectionElem.remove();\r\n            }\r\n\r\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\r\n            function pHandle(e) {\r\n                var $selectionElem = editor.selection.getSelectionContainerElem();\r\n                var $parentElem = $selectionElem.parent();\r\n\r\n                if ($parentElem.html() === '<code><br></code>') {\r\n                    // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\r\n                    // 而且继续回车跳不出去，因此只能特殊处理\r\n                    insertEmptyP($selectionElem);\r\n                    return;\r\n                }\r\n\r\n                if (!$parentElem.equal($textElem)) {\r\n                    // 不是顶级标签\r\n                    return;\r\n                }\r\n\r\n                var nodeName = $selectionElem.getNodeName();\r\n                if (nodeName === 'P') {\r\n                    // 当前的标签是 P ，不用做处理\r\n                    return;\r\n                }\r\n\r\n                if ($selectionElem.text()) {\r\n                    // 有内容，不做处理\r\n                    return;\r\n                }\r\n\r\n                // 插入 <p> ，并将选取定位到 <p>，删除当前标签\r\n                insertEmptyP($selectionElem);\r\n            }\r\n\r\n            $textElem.on('keyup', function (e) {\r\n                if (e.keyCode !== 13) {\r\n                    // 不是回车键\r\n                    return;\r\n                }\r\n                // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\r\n                pHandle(e);\r\n            });\r\n\r\n            // <pre><code></code></pre> 回车时 特殊处理\r\n            function codeHandle(e) {\r\n                var $selectionElem = editor.selection.getSelectionContainerElem();\r\n                if (!$selectionElem) {\r\n                    return;\r\n                }\r\n                var $parentElem = $selectionElem.parent();\r\n                var selectionNodeName = $selectionElem.getNodeName();\r\n                var parentNodeName = $parentElem.getNodeName();\r\n\r\n                if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\r\n                    // 不符合要求 忽略\r\n                    return;\r\n                }\r\n\r\n                if (!editor.cmd.queryCommandSupported('insertHTML')) {\r\n                    // 必须原生支持 insertHTML 命令\r\n                    return;\r\n                }\r\n\r\n                // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\r\n                if (editor._willBreakCode === true) {\r\n                    // 此时可以跳出代码块\r\n                    // 插入 <p> ，并将选取定位到 <p>\r\n                    var $p = $('<p><br></p>');\r\n                    $p.insertAfter($parentElem);\r\n                    editor.selection.createRangeByElem($p, true);\r\n                    editor.selection.restoreSelection();\r\n\r\n                    // 修改状态\r\n                    editor._willBreakCode = false;\r\n\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n\r\n                var _startOffset = editor.selection.getRange().startOffset;\r\n\r\n                // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\r\n                editor.cmd.do('insertHTML', '\\n');\r\n                editor.selection.saveRange();\r\n                if (editor.selection.getRange().startOffset === _startOffset) {\r\n                    // 没起作用，再来一遍\r\n                    editor.cmd.do('insertHTML', '\\n');\r\n                }\r\n\r\n                var codeLength = $selectionElem.html().length;\r\n                if (editor.selection.getRange().startOffset + 1 === codeLength) {\r\n                    // 说明光标在代码最后的位置，执行了回车操作\r\n                    // 记录下来，以便下次回车时候跳出 code\r\n                    editor._willBreakCode = true;\r\n                }\r\n\r\n                // 阻止默认行为\r\n                e.preventDefault();\r\n            }\r\n\r\n            $textElem.on('keydown', function (e) {\r\n                if (e.keyCode !== 13) {\r\n                    // 不是回车键\r\n                    // 取消即将跳转代码块的记录\r\n                    editor._willBreakCode = false;\r\n                    return;\r\n                }\r\n                // <pre><code></code></pre> 回车时 特殊处理\r\n                codeHandle(e);\r\n            });\r\n        },\r\n\r\n        // 清空时保留 <p><br></p>\r\n        _clearHandle: function _clearHandle() {\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n\r\n            $textElem.on('keydown', function (e) {\r\n                if (e.keyCode !== 8) {\r\n                    return;\r\n                }\r\n                var txtHtml = $textElem.html().toLowerCase().trim();\r\n                if (txtHtml === '<p><br></p>') {\r\n                    // 最后剩下一个空行，就不再删除了\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n            });\r\n\r\n            $textElem.on('keyup', function (e) {\r\n                if (e.keyCode !== 8) {\r\n                    return;\r\n                }\r\n                var $p = void 0;\r\n                var txtHtml = $textElem.html().toLowerCase().trim();\r\n\r\n                // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\r\n                if (!txtHtml || txtHtml === '<br>') {\r\n                    // 内容空了\r\n                    $p = $('<p><br/></p>');\r\n                    $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\r\n                    $textElem.append($p);\r\n                    editor.selection.createRangeByElem($p, false, true);\r\n                    editor.selection.restoreSelection();\r\n                }\r\n            });\r\n        },\r\n\r\n        // 粘贴事件（粘贴文字 粘贴图片）\r\n        _pasteHandle: function _pasteHandle() {\r\n            var editor = this.editor;\r\n            var config = editor.config;\r\n            var pasteFilterStyle = config.pasteFilterStyle;\r\n            var pasteTextHandle = config.pasteTextHandle;\r\n            var ignoreImg = config.pasteIgnoreImg;\r\n            var $textElem = editor.$textElem;\r\n\r\n            // 粘贴图片、文本的事件，每次只能执行一个\r\n            // 判断该次粘贴事件是否可以执行\r\n            var pasteTime = 0;\r\n\r\n            function canDo() {\r\n                var now = Date.now();\r\n                var flag = false;\r\n                if (now - pasteTime >= 100) {\r\n                    // 间隔大于 100 ms ，可以执行\r\n                    flag = true;\r\n                }\r\n                pasteTime = now;\r\n                return flag;\r\n            }\r\n\r\n            function resetTime() {\r\n                pasteTime = 0;\r\n            }\r\n\r\n            // 粘贴文字\r\n            $textElem.on('paste', function (e) {\r\n                if (UA.isIE()) {\r\n                    return;\r\n                } else {\r\n                    // 阻止默认行为，使用 execCommand 的粘贴命令\r\n                    e.preventDefault();\r\n                }\r\n\r\n                // 粘贴图片和文本，只能同时使用一个\r\n                if (!canDo()) {\r\n                    return;\r\n                }\r\n\r\n                // 获取粘贴的文字\r\n                var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\r\n                var pasteText = getPasteText(e);\r\n                pasteText = pasteText.replace(/\\n/gm, '<br>');\r\n\r\n                var $selectionElem = editor.selection.getSelectionContainerElem();\r\n                if (!$selectionElem) {\r\n                    return;\r\n                }\r\n                var nodeName = $selectionElem.getNodeName();\r\n\r\n                // code 中只能粘贴纯文本\r\n                if (nodeName === 'CODE' || nodeName === 'PRE') {\r\n                    if (pasteTextHandle && isFunction(pasteTextHandle)) {\r\n                        // 用户自定义过滤处理粘贴内容\r\n                        pasteText = '' + (pasteTextHandle(pasteText) || '');\r\n                    }\r\n                    editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\r\n                    return;\r\n                }\r\n\r\n                // 先放开注释，有问题再追查 ————\r\n                // // 表格中忽略，可能会出现异常问题\r\n                // if (nodeName === 'TD' || nodeName === 'TH') {\r\n                //     return\r\n                // }\r\n\r\n                if (!pasteHtml) {\r\n                    // 没有内容，可继续执行下面的图片粘贴\r\n                    resetTime();\r\n                    return;\r\n                }\r\n                try {\r\n                    // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\r\n                    // 因此执行 insertHTML 会报错\r\n                    if (pasteTextHandle && isFunction(pasteTextHandle)) {\r\n                        // 用户自定义过滤处理粘贴内容\r\n                        pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\r\n                    }\r\n                    editor.cmd.do('insertHTML', pasteHtml);\r\n                } catch (ex) {\r\n                    // 此时使用 pasteText 来兼容一下\r\n                    if (pasteTextHandle && isFunction(pasteTextHandle)) {\r\n                        // 用户自定义过滤处理粘贴内容\r\n                        pasteText = '' + (pasteTextHandle(pasteText) || '');\r\n                    }\r\n                    editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\r\n                }\r\n            });\r\n\r\n            // 粘贴图片\r\n            $textElem.on('paste', function (e) {\r\n                if (UA.isIE()) {\r\n                    return;\r\n                } else {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                // 粘贴图片和文本，只能同时使用一个\r\n                if (!canDo()) {\r\n                    return;\r\n                }\r\n\r\n                // 获取粘贴的图片\r\n                var pasteFiles = getPasteImgs(e);\r\n                if (!pasteFiles || !pasteFiles.length) {\r\n                    return;\r\n                }\r\n\r\n                // 获取当前的元素\r\n                var $selectionElem = editor.selection.getSelectionContainerElem();\r\n                if (!$selectionElem) {\r\n                    return;\r\n                }\r\n                var nodeName = $selectionElem.getNodeName();\r\n\r\n                // code 中粘贴忽略\r\n                if (nodeName === 'CODE' || nodeName === 'PRE') {\r\n                    return;\r\n                }\r\n\r\n                // 上传图片\r\n                var uploadImg = editor.uploadImg;\r\n                uploadImg.uploadImg(pasteFiles);\r\n            });\r\n        },\r\n\r\n        // tab 特殊处理\r\n        _tabHandle: function _tabHandle() {\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n\r\n            $textElem.on('keydown', function (e) {\r\n                if (e.keyCode !== 9) {\r\n                    return;\r\n                }\r\n                if (!editor.cmd.queryCommandSupported('insertHTML')) {\r\n                    // 必须原生支持 insertHTML 命令\r\n                    return;\r\n                }\r\n                var $selectionElem = editor.selection.getSelectionContainerElem();\r\n                if (!$selectionElem) {\r\n                    return;\r\n                }\r\n                var $parentElem = $selectionElem.parent();\r\n                var selectionNodeName = $selectionElem.getNodeName();\r\n                var parentNodeName = $parentElem.getNodeName();\r\n\r\n                if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\r\n                    // <pre><code> 里面\r\n                    editor.cmd.do('insertHTML', '    ');\r\n                } else {\r\n                    // 普通文字\r\n                    editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\r\n                }\r\n\r\n                e.preventDefault();\r\n            });\r\n        },\r\n\r\n        // img 点击\r\n        _imgHandle: function _imgHandle() {\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n\r\n            // 为图片增加 selected 样式\r\n            $textElem.on('click', 'img', function (e) {\r\n                var img = this;\r\n                var $img = $(img);\r\n\r\n                if ($img.attr('data-w-e') === '1') {\r\n                    // 是表情图片，忽略\r\n                    return;\r\n                }\r\n\r\n                // 记录当前点击过的图片\r\n                editor._selectedImg = $img;\r\n\r\n                // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\r\n                editor.selection.createRangeByElem($img);\r\n                editor.selection.restoreSelection();\r\n            });\r\n\r\n            // 去掉图片的 selected 样式\r\n            $textElem.on('click  keyup', function (e) {\r\n                if (e.target.matches('img')) {\r\n                    // 点击的是图片，忽略\r\n                    return;\r\n                }\r\n                // 删除记录\r\n                editor._selectedImg = null;\r\n            });\r\n        },\r\n\r\n        // 拖拽事件\r\n        _dragHandle: function _dragHandle() {\r\n            var editor = this.editor;\r\n\r\n            // 禁用 document 拖拽事件\r\n            var $document = $(document);\r\n            $document.on('dragleave drop dragenter dragover', function (e) {\r\n                e.preventDefault();\r\n            });\r\n\r\n            // 添加编辑区域拖拽事件\r\n            var $textElem = editor.$textElem;\r\n            $textElem.on('drop', function (e) {\r\n                e.preventDefault();\r\n                var files = e.dataTransfer && e.dataTransfer.files;\r\n                if (!files || !files.length) {\r\n                    return;\r\n                }\r\n\r\n                // 上传图片\r\n                var uploadImg = editor.uploadImg;\r\n                uploadImg.uploadImg(files);\r\n            });\r\n        }\r\n    };\r\n\r\n    /*\r\n    命令，封装 document.execCommand\r\n*/\r\n\r\n// 构造函数\r\n    function Command(editor) {\r\n        this.editor = editor;\r\n    }\r\n\r\n// 修改原型\r\n    Command.prototype = {\r\n        constructor: Command,\r\n\r\n        // 执行命令\r\n        do: function _do(name, value) {\r\n            var editor = this.editor;\r\n\r\n            // 使用 styleWithCSS\r\n            if (!editor._useStyleWithCSS) {\r\n                document.execCommand('styleWithCSS', null, true);\r\n                editor._useStyleWithCSS = true;\r\n            }\r\n\r\n            // 如果无选区，忽略\r\n            if (!editor.selection.getRange()) {\r\n                return;\r\n            }\r\n\r\n            // 恢复选取\r\n            editor.selection.restoreSelection();\r\n\r\n            // 执行\r\n            var _name = '_' + name;\r\n            if (this[_name]) {\r\n                // 有自定义事件\r\n                this[_name](value);\r\n            } else {\r\n                // 默认 command\r\n                this._execCommand(name, value);\r\n            }\r\n\r\n            // 修改菜单状态\r\n            editor.menus.changeActive();\r\n\r\n            // 最后，恢复选取保证光标在原来的位置闪烁\r\n            editor.selection.saveRange();\r\n            editor.selection.restoreSelection();\r\n\r\n            // 触发 onchange\r\n            editor.change && editor.change();\r\n        },\r\n\r\n        // 自定义 insertHTML 事件\r\n        _insertHTML: function _insertHTML(html) {\r\n            var editor = this.editor;\r\n            var range = editor.selection.getRange();\r\n\r\n            if (this.queryCommandSupported('insertHTML')) {\r\n                // W3C\r\n                this._execCommand('insertHTML', html);\r\n            } else if (range.insertNode) {\r\n                // IE\r\n                range.deleteContents();\r\n                range.insertNode($(html)[0]);\r\n            } else if (range.pasteHTML) {\r\n                // IE <= 10\r\n                range.pasteHTML(html);\r\n            }\r\n        },\r\n\r\n        // 插入 elem\r\n        _insertElem: function _insertElem($elem) {\r\n            var editor = this.editor;\r\n            var range = editor.selection.getRange();\r\n\r\n            if (range.insertNode) {\r\n                range.deleteContents();\r\n                range.insertNode($elem[0]);\r\n            }\r\n        },\r\n\r\n        // 封装 execCommand\r\n        _execCommand: function _execCommand(name, value) {\r\n            document.execCommand(name, false, value);\r\n        },\r\n\r\n        // 封装 document.queryCommandValue\r\n        queryCommandValue: function queryCommandValue(name) {\r\n            return document.queryCommandValue(name);\r\n        },\r\n\r\n        // 封装 document.queryCommandState\r\n        queryCommandState: function queryCommandState(name) {\r\n            return document.queryCommandState(name);\r\n        },\r\n\r\n        // 封装 document.queryCommandSupported\r\n        queryCommandSupported: function queryCommandSupported(name) {\r\n            return document.queryCommandSupported(name);\r\n        }\r\n    };\r\n\r\n    /*\r\n    selection range API\r\n*/\r\n\r\n// 构造函数\r\n    function API(editor) {\r\n        this.editor = editor;\r\n        this._currentRange = null;\r\n    }\r\n\r\n// 修改原型\r\n    API.prototype = {\r\n        constructor: API,\r\n\r\n        // 获取 range 对象\r\n        getRange: function getRange() {\r\n            return this._currentRange;\r\n        },\r\n\r\n        // 保存选区\r\n        saveRange: function saveRange(_range) {\r\n            if (_range) {\r\n                // 保存已有选区\r\n                this._currentRange = _range;\r\n                return;\r\n            }\r\n\r\n            // 获取当前的选区\r\n            var selection = window.getSelection();\r\n            if (selection.rangeCount === 0) {\r\n                return;\r\n            }\r\n            var range = selection.getRangeAt(0);\r\n\r\n            // 判断选区内容是否在编辑内容之内\r\n            var $containerElem = this.getSelectionContainerElem(range);\r\n            if (!$containerElem) {\r\n                return;\r\n            }\r\n\r\n            // 判断选区内容是否在不可编辑区域之内\r\n            if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\r\n                return;\r\n            }\r\n\r\n            var editor = this.editor;\r\n            var $textElem = editor.$textElem;\r\n            if ($textElem.isContain($containerElem)) {\r\n                // 是编辑内容之内的\r\n                this._currentRange = range;\r\n            }\r\n        },\r\n\r\n        // 折叠选区\r\n        collapseRange: function collapseRange(toStart) {\r\n            if (toStart == null) {\r\n                // 默认为 false\r\n                toStart = false;\r\n            }\r\n            var range = this._currentRange;\r\n            if (range) {\r\n                range.collapse(toStart);\r\n            }\r\n        },\r\n\r\n        // 选中区域的文字\r\n        getSelectionText: function getSelectionText() {\r\n            var range = this._currentRange;\r\n            if (range) {\r\n                return this._currentRange.toString();\r\n            } else {\r\n                return '';\r\n            }\r\n        },\r\n\r\n        // 选区的 $Elem\r\n        getSelectionContainerElem: function getSelectionContainerElem(range) {\r\n            range = range || this._currentRange;\r\n            var elem = void 0;\r\n            if (range) {\r\n                elem = range.commonAncestorContainer;\r\n                return $(elem.nodeType === 1 ? elem : elem.parentNode);\r\n            }\r\n        },\r\n        getSelectionStartElem: function getSelectionStartElem(range) {\r\n            range = range || this._currentRange;\r\n            var elem = void 0;\r\n            if (range) {\r\n                elem = range.startContainer;\r\n                return $(elem.nodeType === 1 ? elem : elem.parentNode);\r\n            }\r\n        },\r\n        getSelectionEndElem: function getSelectionEndElem(range) {\r\n            range = range || this._currentRange;\r\n            var elem = void 0;\r\n            if (range) {\r\n                elem = range.endContainer;\r\n                return $(elem.nodeType === 1 ? elem : elem.parentNode);\r\n            }\r\n        },\r\n\r\n        // 选区是否为空\r\n        isSelectionEmpty: function isSelectionEmpty() {\r\n            var range = this._currentRange;\r\n            if (range && range.startContainer) {\r\n                if (range.startContainer === range.endContainer) {\r\n                    if (range.startOffset === range.endOffset) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // 恢复选区\r\n        restoreSelection: function restoreSelection() {\r\n            var selection = window.getSelection();\r\n            selection.removeAllRanges();\r\n            selection.addRange(this._currentRange);\r\n        },\r\n\r\n        // 创建一个空白（即 &#8203 字符）选区\r\n        createEmptyRange: function createEmptyRange() {\r\n            var editor = this.editor;\r\n            var range = this.getRange();\r\n            var $elem = void 0;\r\n\r\n            if (!range) {\r\n                // 当前无 range\r\n                return;\r\n            }\r\n            if (!this.isSelectionEmpty()) {\r\n                // 当前选区必须没有内容才可以\r\n                return;\r\n            }\r\n\r\n            try {\r\n                // 目前只支持 webkit 内核\r\n                if (UA.isWebkit()) {\r\n                    // 插入 &#8203\r\n                    editor.cmd.do('insertHTML', '&#8203;');\r\n                    // 修改 offset 位置\r\n                    range.setEnd(range.endContainer, range.endOffset + 1);\r\n                    // 存储\r\n                    this.saveRange(range);\r\n                } else {\r\n                    $elem = $('<strong>&#8203;</strong>');\r\n                    editor.cmd.do('insertElem', $elem);\r\n                    this.createRangeByElem($elem, true);\r\n                }\r\n            } catch (ex) {\r\n                // 部分情况下会报错，兼容一下\r\n            }\r\n        },\r\n\r\n        // 根据 $Elem 设置选区\r\n        createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\r\n            // $elem - 经过封装的 elem\r\n            // toStart - true 开始位置，false 结束位置\r\n            // isContent - 是否选中Elem的内容\r\n            if (!$elem.length) {\r\n                return;\r\n            }\r\n\r\n            var elem = $elem[0];\r\n            var range = document.createRange();\r\n\r\n            if (isContent) {\r\n                range.selectNodeContents(elem);\r\n            } else {\r\n                range.selectNode(elem);\r\n            }\r\n\r\n            if (typeof toStart === 'boolean') {\r\n                range.collapse(toStart);\r\n            }\r\n\r\n            // 存储 range\r\n            this.saveRange(range);\r\n        }\r\n    };\r\n\r\n    /*\r\n    上传进度条\r\n*/\r\n\r\n    function Progress(editor) {\r\n        this.editor = editor;\r\n        this._time = 0;\r\n        this._isShow = false;\r\n        this._isRender = false;\r\n        this._timeoutId = 0;\r\n        this.$textContainer = editor.$textContainerElem;\r\n        this.$bar = $('<div class=\"w-e-progress\"></div>');\r\n    }\r\n\r\n    Progress.prototype = {\r\n        constructor: Progress,\r\n\r\n        show: function show(progress) {\r\n            var _this = this;\r\n\r\n            // 状态处理\r\n            if (this._isShow) {\r\n                return;\r\n            }\r\n            this._isShow = true;\r\n\r\n            // 渲染\r\n            var $bar = this.$bar;\r\n            if (!this._isRender) {\r\n                var $textContainer = this.$textContainer;\r\n                $textContainer.append($bar);\r\n            } else {\r\n                this._isRender = true;\r\n            }\r\n\r\n            // 改变进度（节流，100ms 渲染一次）\r\n            if (Date.now() - this._time > 100) {\r\n                if (progress <= 1) {\r\n                    $bar.css('width', progress * 100 + '%');\r\n                    this._time = Date.now();\r\n                }\r\n            }\r\n\r\n            // 隐藏\r\n            var timeoutId = this._timeoutId;\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            timeoutId = setTimeout(function () {\r\n                _this._hide();\r\n            }, 500);\r\n        },\r\n\r\n        _hide: function _hide() {\r\n            var $bar = this.$bar;\r\n            $bar.remove();\r\n\r\n            // 修改状态\r\n            this._time = 0;\r\n            this._isShow = false;\r\n            this._isRender = false;\r\n        }\r\n    };\r\n\r\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\r\n        return typeof obj;\r\n    } : function (obj) {\r\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n    };\r\n\r\n    /*\r\n    上传图片\r\n*/\r\n\r\n// 构造函数\r\n    function UploadImg(editor) {\r\n        this.editor = editor;\r\n    }\r\n\r\n// 原型\r\n    UploadImg.prototype = {\r\n        constructor: UploadImg,\r\n\r\n        // 根据 debug 弹出不同的信息\r\n        _alert: function _alert(alertInfo, debugInfo) {\r\n            var editor = this.editor;\r\n            var debug = editor.config.debug;\r\n            var customAlert = editor.config.customAlert;\r\n\r\n            if (debug) {\r\n                throw new Error('wangEditor: ' + (debugInfo || alertInfo));\r\n            } else {\r\n                if (customAlert && typeof customAlert === 'function') {\r\n                    customAlert(alertInfo);\r\n                } else {\r\n                    alert(alertInfo);\r\n                }\r\n            }\r\n        },\r\n\r\n        // 根据链接插入图片\r\n        insertLinkImg: function insertLinkImg(link) {\r\n            var _this2 = this;\r\n\r\n            if (!link) {\r\n                return;\r\n            }\r\n            var editor = this.editor;\r\n            var config = editor.config;\r\n\r\n            // 校验格式\r\n            var linkImgCheck = config.linkImgCheck;\r\n            var checkResult = void 0;\r\n            if (linkImgCheck && typeof linkImgCheck === 'function') {\r\n                checkResult = linkImgCheck(link);\r\n                if (typeof checkResult === 'string') {\r\n                    // 校验失败，提示信息\r\n                    alert(checkResult);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\r\n\r\n            // 验证图片 url 是否有效，无效的话给出提示\r\n            var img = document.createElement('img');\r\n            img.onload = function () {\r\n                var callback = config.linkImgCallback;\r\n                if (callback && typeof callback === 'function') {\r\n                    callback(link);\r\n                }\r\n\r\n                img = null;\r\n            };\r\n            img.onerror = function () {\r\n                img = null;\r\n                // 无法成功下载图片\r\n                _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\r\n                return;\r\n            };\r\n            img.onabort = function () {\r\n                img = null;\r\n            };\r\n            img.src = link;\r\n        },\r\n\r\n        // 上传图片\r\n        uploadImg: function uploadImg(files) {\r\n            var _this3 = this;\r\n\r\n            if (!files || !files.length) {\r\n                return;\r\n            }\r\n\r\n            // ------------------------------ 获取配置信息 ------------------------------\r\n            var editor = this.editor;\r\n            var config = editor.config;\r\n            var uploadImgServer = config.uploadImgServer;\r\n            var uploadImgShowBase64 = config.uploadImgShowBase64;\r\n\r\n            var maxSize = config.uploadImgMaxSize;\r\n            var maxSizeM = maxSize / 1024 / 1024;\r\n            var maxLength = config.uploadImgMaxLength || 10000;\r\n            var uploadFileName = config.uploadFileName || '';\r\n            var uploadImgParams = config.uploadImgParams || {};\r\n            var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\r\n            var uploadImgHeaders = config.uploadImgHeaders || {};\r\n            var hooks = config.uploadImgHooks || {};\r\n            var timeout = config.uploadImgTimeout || 3000;\r\n            var withCredentials = config.withCredentials;\r\n            if (withCredentials == null) {\r\n                withCredentials = false;\r\n            }\r\n            var customUploadImg = config.customUploadImg;\r\n\r\n            if (!customUploadImg) {\r\n                // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\r\n                if (!uploadImgServer && !uploadImgShowBase64) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // ------------------------------ 验证文件信息 ------------------------------\r\n            var resultFiles = [];\r\n            var errInfo = [];\r\n            arrForEach(files, function (file) {\r\n                var name = file.name;\r\n                var size = file.size;\r\n\r\n                // chrome 低版本 name === undefined\r\n                if (!name || !size) {\r\n                    return;\r\n                }\r\n\r\n                if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\r\n                    // 后缀名不合法，不是图片\r\n                    errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\r\n                    return;\r\n                }\r\n                if (maxSize < size) {\r\n                    // 上传图片过大\r\n                    errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\r\n                    return;\r\n                }\r\n\r\n                // 验证通过的加入结果列表\r\n                resultFiles.push(file);\r\n            });\r\n            // 抛出验证信息\r\n            if (errInfo.length) {\r\n                this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\r\n                return;\r\n            }\r\n            if (resultFiles.length > maxLength) {\r\n                this._alert('一次最多上传' + maxLength + '张图片');\r\n                return;\r\n            }\r\n\r\n            // ------------------------------ 自定义上传 ------------------------------\r\n            if (customUploadImg && typeof customUploadImg === 'function') {\r\n                customUploadImg(resultFiles, this.insertLinkImg.bind(this));\r\n\r\n                // 阻止以下代码执行\r\n                return;\r\n            }\r\n\r\n            // 添加图片数据\r\n            var formdata = new FormData();\r\n            arrForEach(resultFiles, function (file) {\r\n                var name = uploadFileName || file.name;\r\n                formdata.append(name, file);\r\n            });\r\n\r\n            // ------------------------------ 上传图片 ------------------------------\r\n            if (uploadImgServer && typeof uploadImgServer === 'string') {\r\n                // 添加参数\r\n                var uploadImgServerArr = uploadImgServer.split('#');\r\n                uploadImgServer = uploadImgServerArr[0];\r\n                var uploadImgServerHash = uploadImgServerArr[1] || '';\r\n                objForEach(uploadImgParams, function (key, val) {\r\n                    // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\r\n                    // val = encodeURIComponent(val)\r\n\r\n                    // 第一，将参数拼接到 url 中\r\n                    if (uploadImgParamsWithUrl) {\r\n                        if (uploadImgServer.indexOf('?') > 0) {\r\n                            uploadImgServer += '&';\r\n                        } else {\r\n                            uploadImgServer += '?';\r\n                        }\r\n                        uploadImgServer = uploadImgServer + key + '=' + val;\r\n                    }\r\n\r\n                    // 第二，将参数添加到 formdata 中\r\n                    formdata.append(key, val);\r\n                });\r\n                if (uploadImgServerHash) {\r\n                    uploadImgServer += '#' + uploadImgServerHash;\r\n                }\r\n\r\n                // 定义 xhr\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.open('POST', uploadImgServer);\r\n\r\n                // 设置超时\r\n                xhr.timeout = timeout;\r\n                xhr.ontimeout = function () {\r\n                    // hook - timeout\r\n                    if (hooks.timeout && typeof hooks.timeout === 'function') {\r\n                        hooks.timeout(xhr, editor);\r\n                    }\r\n\r\n                    _this3._alert('上传图片超时');\r\n                };\r\n\r\n                // 监控 progress\r\n                if (xhr.upload) {\r\n                    xhr.upload.onprogress = function (e) {\r\n                        var percent = void 0;\r\n                        // 进度条\r\n                        var progressBar = new Progress(editor);\r\n                        if (e.lengthComputable) {\r\n                            percent = e.loaded / e.total;\r\n                            progressBar.show(percent);\r\n                        }\r\n                    };\r\n                }\r\n\r\n                // 返回数据\r\n                xhr.onreadystatechange = function () {\r\n                    var result = void 0;\r\n                    if (xhr.readyState === 4) {\r\n                        if (xhr.status < 200 || xhr.status >= 300) {\r\n                            // hook - error\r\n                            if (hooks.error && typeof hooks.error === 'function') {\r\n                                hooks.error(xhr, editor);\r\n                            }\r\n\r\n                            // xhr 返回状态错误\r\n                            _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\r\n                            return;\r\n                        }\r\n\r\n                        result = xhr.responseText;\r\n                        if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\r\n                            try {\r\n                                result = JSON.parse(result);\r\n                            } catch (ex) {\r\n                                // hook - fail\r\n                                if (hooks.fail && typeof hooks.fail === 'function') {\r\n                                    hooks.fail(xhr, editor, result);\r\n                                }\r\n\r\n                                _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\r\n                                return;\r\n                            }\r\n                        }\r\n                        if (!hooks.customInsert && result.errno != '0') {\r\n                            // hook - fail\r\n                            if (hooks.fail && typeof hooks.fail === 'function') {\r\n                                hooks.fail(xhr, editor, result);\r\n                            }\r\n\r\n                            // 数据错误\r\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\r\n                        } else {\r\n                            if (hooks.customInsert && typeof hooks.customInsert === 'function') {\r\n                                // 使用者自定义插入方法\r\n                                hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\r\n                            } else {\r\n                                // 将图片插入编辑器\r\n                                var data = result.data || [];\r\n                                data.forEach(function (link) {\r\n                                    _this3.insertLinkImg(link);\r\n                                });\r\n                            }\r\n\r\n                            // hook - success\r\n                            if (hooks.success && typeof hooks.success === 'function') {\r\n                                hooks.success(xhr, editor, result);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // hook - before\r\n                if (hooks.before && typeof hooks.before === 'function') {\r\n                    var beforeResult = hooks.before(xhr, editor, resultFiles);\r\n                    if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\r\n                        if (beforeResult.prevent) {\r\n                            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\r\n                            this._alert(beforeResult.msg);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // 自定义 headers\r\n                objForEach(uploadImgHeaders, function (key, val) {\r\n                    xhr.setRequestHeader(key, val);\r\n                });\r\n\r\n                // 跨域传 cookie\r\n                xhr.withCredentials = withCredentials;\r\n\r\n                // 发送请求\r\n                xhr.send(formdata);\r\n\r\n                // 注意，要 return 。不去操作接下来的 base64 显示方式\r\n                return;\r\n            }\r\n\r\n            // ------------------------------ 显示 base64 格式 ------------------------------\r\n            if (uploadImgShowBase64) {\r\n                arrForEach(files, function (file) {\r\n                    var _this = _this3;\r\n                    var reader = new FileReader();\r\n                    reader.readAsDataURL(file);\r\n                    reader.onload = function () {\r\n                        _this.insertLinkImg(this.result);\r\n                    };\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    编辑器构造函数\r\n*/\r\n\r\n// id，累加\r\n    var editorId = 1;\r\n\r\n// 构造函数\r\n    function Editor(toolbarSelector, textSelector) {\r\n        if (toolbarSelector == null) {\r\n            // 没有传入任何参数，报错\r\n            throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\r\n        }\r\n        // id，用以区分单个页面不同的编辑器对象\r\n        this.id = 'wangEditor-' + editorId++;\r\n\r\n        this.toolbarSelector = toolbarSelector;\r\n        this.textSelector = textSelector;\r\n\r\n        // 自定义配置\r\n        this.customConfig = {};\r\n    }\r\n\r\n// 修改原型\r\n    Editor.prototype = {\r\n        constructor: Editor,\r\n\r\n        // 初始化配置\r\n        _initConfig: function _initConfig() {\r\n            // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\r\n            var target = {};\r\n            this.config = Object.assign(target, config, this.customConfig);\r\n\r\n            // 将语言配置，生成正则表达式\r\n            var langConfig = this.config.lang || {};\r\n            var langArgs = [];\r\n            objForEach(langConfig, function (key, val) {\r\n                // key 即需要生成正则表达式的规则，如“插入链接”\r\n                // val 即需要被替换成的语言，如“insert link”\r\n                langArgs.push({\r\n                    reg: new RegExp(key, 'img'),\r\n                    val: val\r\n\r\n                });\r\n            });\r\n            this.config.langArgs = langArgs;\r\n        },\r\n\r\n        // 初始化 DOM\r\n        _initDom: function _initDom() {\r\n            var _this = this;\r\n\r\n            var toolbarSelector = this.toolbarSelector;\r\n            var $toolbarSelector = $(toolbarSelector);\r\n            var textSelector = this.textSelector;\r\n\r\n            var config$$1 = this.config;\r\n            var zIndex = config$$1.zIndex;\r\n            var minHeight = config$$1.minHeight;\r\n            var maxHeight = config$$1.maxHeight;\r\n            var textBgColor = config$$1.textBgColor;\r\n            var toolbarSize = config$$1.toolBarSize\r\n\r\n            // 定义变量\r\n            var $toolbarElem = void 0,\r\n                $textContainerElem = void 0,\r\n                $textElem = void 0,\r\n                $children = void 0;\r\n\r\n            if (textSelector == null) {\r\n                // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\r\n                $toolbarElem = $('<div></div>');\r\n                $textContainerElem = $('<div></div>');\r\n\r\n                // 将编辑器区域原有的内容，暂存起来\r\n                $children = $toolbarSelector.children();\r\n\r\n                // 添加到 DOM 结构中\r\n                $toolbarSelector.append($toolbarElem).append($textContainerElem);\r\n            } else {\r\n                // toolbar 和 text 的选择器都有值，记录属性\r\n                $toolbarElem = $toolbarSelector;\r\n                $textContainerElem = $(textSelector);\r\n                // 将编辑器区域原有的内容，暂存起来\r\n                $children = $textContainerElem.children();\r\n            }\r\n\r\n            // 编辑区域\r\n            $textElem = $('<div></div>');\r\n            $textElem.attr('contenteditable', 'true');\r\n\r\n            // 初始化编辑区域内容\r\n            if ($children && $children.length) {\r\n                $textElem.append($children);\r\n            } else {\r\n                $textElem.append($('<p><br></p>'));\r\n            }\r\n\r\n            // 编辑区域加入DOM\r\n            $textContainerElem.append($textElem);\r\n\r\n            // 设置通用的 class\r\n            $toolbarElem.addClass('w-e-toolbar');\r\n            $toolbarElem.addClass('w-e-toolbar-'+toolbarSize);\r\n            $textContainerElem.addClass('w-e-text-container');\r\n            $textContainerElem.css('z-index', zIndex);\r\n            $textElem.addClass('w-e-text').css('min-height',minHeight)\r\n                .css('max-height',maxHeight).css('background-color',textBgColor);\r\n            // 添加 ID\r\n            var toolbarElemId = getRandom('toolbar-elem');\r\n            $toolbarElem.attr('id', toolbarElemId);\r\n            var textElemId = getRandom('text-elem');\r\n            $textElem.attr('id', textElemId);\r\n\r\n            // 记录属性\r\n            this.$toolbarElem = $toolbarElem;\r\n            this.$textContainerElem = $textContainerElem;\r\n            this.$textElem = $textElem;\r\n            this.toolbarElemId = toolbarElemId;\r\n            this.textElemId = textElemId;\r\n\r\n            // 记录输入法的开始和结束\r\n            var compositionEnd = true;\r\n            $textContainerElem.on('compositionstart', function () {\r\n                // 输入法开始输入\r\n                compositionEnd = false;\r\n            });\r\n            $textContainerElem.on('compositionend', function () {\r\n                // 输入法结束输入\r\n                compositionEnd = true;\r\n            });\r\n\r\n            // 绑定 onchange\r\n            $textContainerElem.on('click keyup', function () {\r\n                // 输入法结束才出发 onchange\r\n                compositionEnd && _this.change && _this.change();\r\n            });\r\n            $toolbarElem.on('click', function () {\r\n                this.change && this.change();\r\n            });\r\n\r\n            //绑定 onfocus 与 onblur 事件\r\n            if (config$$1.onfocus || config$$1.onblur) {\r\n                // 当前编辑器是否是焦点状态\r\n                this.isFocus = false;\r\n\r\n                $(document).on('click', function (e) {\r\n                    //判断当前点击元素是否在编辑器内\r\n                    var isChild = $textElem.isContain($(e.target));\r\n\r\n                    //判断当前点击元素是否为工具栏\r\n                    var isToolbar = $toolbarElem.isContain($(e.target));\r\n                    var isMenu = $toolbarElem[0] == e.target ? true : false;\r\n\r\n                    if (!isChild) {\r\n                        //若为选择工具栏中的功能，则不视为成blur操作\r\n                        if (isToolbar && !isMenu) {\r\n                            return;\r\n                        }\r\n\r\n                        if (_this.isFocus) {\r\n                            _this.onblur && _this.onblur();\r\n                        }\r\n                        _this.isFocus = false;\r\n                    } else {\r\n                        if (!_this.isFocus) {\r\n                            _this.onfocus && _this.onfocus();\r\n                        }\r\n                        _this.isFocus = true;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // 封装 command\r\n        _initCommand: function _initCommand() {\r\n            this.cmd = new Command(this);\r\n        },\r\n\r\n        // 封装 selection range API\r\n        _initSelectionAPI: function _initSelectionAPI() {\r\n            this.selection = new API(this);\r\n        },\r\n\r\n        // 添加图片上传\r\n        _initUploadImg: function _initUploadImg() {\r\n            this.uploadImg = new UploadImg(this);\r\n        },\r\n\r\n        // 初始化菜单\r\n        _initMenus: function _initMenus() {\r\n            this.menus = new Menus(this);\r\n            this.menus.init();\r\n        },\r\n\r\n        // 添加 text 区域\r\n        _initText: function _initText() {\r\n            this.txt = new Text(this);\r\n            this.txt.init();\r\n        },\r\n\r\n        // 初始化选区，将光标定位到内容尾部\r\n        initSelection: function initSelection(newLine) {\r\n            var $textElem = this.$textElem;\r\n            var $children = $textElem.children();\r\n            if (!$children.length) {\r\n                // 如果编辑器区域无内容，添加一个空行，重新设置选区\r\n                $textElem.append($('<p><br></p>'));\r\n                this.initSelection();\r\n                return;\r\n            }\r\n\r\n            var $last = $children.last();\r\n\r\n            if (newLine) {\r\n                // 新增一个空行\r\n                var html = $last.html().toLowerCase();\r\n                var nodeName = $last.getNodeName();\r\n                if (html !== '<br/>' && html !== '<br/>' || nodeName !== 'P') {\r\n                    // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\r\n                    $textElem.append($('<p><br></p>'));\r\n                    this.initSelection();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.selection.createRangeByElem($last, false, true);\r\n            this.selection.restoreSelection();\r\n        },\r\n\r\n        // 绑定事件\r\n        _bindEvent: function _bindEvent() {\r\n            // -------- 绑定 onchange 事件 --------\r\n            var onChangeTimeoutId = 0;\r\n            var beforeChangeHtml = this.txt.html();\r\n            var config$$1 = this.config;\r\n\r\n            // onchange 触发延迟时间\r\n            var onchangeTimeout = config$$1.onchangeTimeout;\r\n            onchangeTimeout = parseInt(onchangeTimeout, 10);\r\n            if (!onchangeTimeout || onchangeTimeout <= 0) {\r\n                onchangeTimeout = 200;\r\n            }\r\n\r\n            var onchange = config$$1.onchange;\r\n            if (onchange && typeof onchange === 'function') {\r\n                // 触发 change 的有三个场景：\r\n                // 1. $textContainerElem.on('click keyup')\r\n                // 2. $toolbarElem.on('click')\r\n                // 3. editor.cmd.do()\r\n                this.change = function () {\r\n                    // 判断是否有变化\r\n                    var currentHtml = this.txt.html();\r\n\r\n                    if (currentHtml.length === beforeChangeHtml.length) {\r\n                        // 需要比较每一个字符\r\n                        if (currentHtml === beforeChangeHtml) {\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    // 执行，使用节流\r\n                    if (onChangeTimeoutId) {\r\n                        clearTimeout(onChangeTimeoutId);\r\n                    }\r\n                    onChangeTimeoutId = setTimeout(function () {\r\n                        // 触发配置的 onchange 函数\r\n                        onchange(currentHtml);\r\n                        beforeChangeHtml = currentHtml;\r\n                    }, onchangeTimeout);\r\n                };\r\n            }\r\n\r\n            // -------- 绑定 onblur 事件 --------\r\n            var onblur = config$$1.onblur;\r\n            if (onblur && typeof onblur === 'function') {\r\n                this.onblur = function () {\r\n                    var currentHtml = this.txt.html();\r\n                    onblur(currentHtml);\r\n                };\r\n            }\r\n\r\n            // -------- 绑定 onfocus 事件 --------\r\n            var onfocus = config$$1.onfocus;\r\n            if (onfocus && typeof onfocus === 'function') {\r\n                this.onfocus = function () {\r\n                    onfocus();\r\n                };\r\n            }\r\n        },\r\n\r\n        // 创建编辑器\r\n        create: function create() {\r\n            // 初始化配置信息\r\n            this._initConfig();\r\n\r\n            // 初始化 DOM\r\n            this._initDom();\r\n\r\n            // 封装 command API\r\n            this._initCommand();\r\n\r\n            // 封装 selection range API\r\n            this._initSelectionAPI();\r\n\r\n            // 添加 text\r\n            this._initText();\r\n\r\n            // 初始化菜单\r\n            this._initMenus();\r\n\r\n            // 添加 图片上传\r\n            this._initUploadImg();\r\n\r\n            // 初始化选区，将光标定位到内容尾部\r\n            this.initSelection(true);\r\n\r\n            // 绑定事件\r\n            this._bindEvent();\r\n        },\r\n\r\n        // 解绑所有事件（暂时不对外开放）\r\n        _offAllEvent: function _offAllEvent() {\r\n            $.offAll();\r\n        }\r\n    };\r\n\r\n// 检验是否浏览器环境\r\n    try {\r\n        document;\r\n    } catch (ex) {\r\n        throw new Error('请在浏览器环境下运行');\r\n    }\r\n\r\n// polyfill\r\n    polyfill();\r\n\r\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\r\n    var inlinecss = '.w-e-menu-panel,.w-e-text-container,.w-e-toolbar{padding:0;margin:0;box-sizing:border-box}.w-e-menu-panel *,.w-e-text-container *,.w-e-toolbar *{padding:0;margin:0;box-sizing:border-box}.w-e-clear-fix:after{content:\"\";display:table;clear:both}.w-e-toolbar .w-e-droplist{position:absolute;left:0;top:0;padding:4px 0;text-align:left;list-style-type:none;background-color:#fff;background-clip:padding-box;border-radius:4px;outline:0;box-shadow:0 2px 8px rgba(0,0,0,.15);-webkit-transform:translateZ(0);z-index:3}.w-e-droplist:before{content:\"\";position:absolute;left:14px;top:-3px;display:block;background-color:#fff;width:8px;height:8px;transform:rotate(45deg)}.w-e-toolbar .w-e-droplist .w-e-dp-title{text-align:center;color:#999;line-height:2;font-size:14px;border-bottom:1px solid #f0f0f0;margin-bottom:5px}.w-e-toolbar .w-e-droplist ul.w-e-list{list-style:none;line-height:1}.w-e-droplist ul.w-e-list li.w-e-item{clear:both;margin:0;padding:5px 12px;color:rgba(0,0,0,.65);font-weight:400;font-size:14px;line-height:22px;white-space:nowrap;cursor:pointer;transition:all .3s}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover{background-color:#e6f7ff;color:#1890ff}.w-e-toolbar .w-e-droplist ul.w-e-block{list-style:none;text-align:left;padding:5px;display:flex;flex-wrap:wrap}ul.w-e-block .color-block{display:inline-block;height:20px;width:100%;border-radius:4px}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item{flex:0 0 25%;height:20px;width:20px;text-align:center;padding:0 3px;margin-bottom:6px}@font-face{font-family:we-antd-icon;src:url(data:application/x-font-woff2;charset=utf-8;base64,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) format(\\'woff2\\');font-style:normal;font-size:inherit}[class*=w-e-icon-],[class^=w-e-icon-]{font-family:we-antd-icon!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.w-e-icon-bulb:before{content:\"\\\\e7c3\"}.w-e-icon-block:before{content:\"\\\\e7e0\"}.w-e-icon-number:before{content:\"\\\\e802\"}.w-e-icon-close:before{content:\"\\\\e803\"}.w-e-icon-smile:before{content:\"\\\\e783\"}.w-e-icon-undo:before{content:\"\\\\e787\"}.w-e-icon-redo:before{content:\"\\\\e788\"}.w-e-icon-cloud-upload:before{content:\"\\\\e7d9\"}.w-e-icon-video:before{content:\"\\\\e7da\"}.w-e-icon-image:before{content:\"\\\\e7de\"}.w-e-icon-table:before{content:\"\\\\e7df\"}.w-e-icon-link:before{content:\"\\\\e7e2\"}.w-e-icon-unorderedlist:before{content:\"\\\\e7f4\"}.w-e-icon-orderedlist:before{content:\"\\\\e7f5\"}.w-e-icon-align-right:before{content:\"\\\\e7f6\"}.w-e-icon-align-center:before{content:\"\\\\e7f7\"}.w-e-icon-align-left:before{content:\"\\\\e7f8\"}.w-e-icon-bold:before{content:\"\\\\e7f9\"}.w-e-icon-font-colors:before{content:\"\\\\e7fa\"}.w-e-icon-font-size:before{content:\"\\\\e7fb\"}.w-e-icon-line-height:before{content:\"\\\\e7fc\"}.w-e-icon-strikethrough:before{content:\"\\\\e7fd\"}.w-e-icon-underline:before{content:\"\\\\e7fe\"}.w-e-icon-italic:before{content:\"\\\\e7ff\"}.w-e-icon-code:before{content:\"\\\\e800\"}.w-e-icon-bg-colors:before{content:\"\\\\e801\"}.w-e-toolbar{box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;padding:5px;align-items:center;background-color:#fafafa;border:1px solid #d9d9d9;border-radius:4px 4px 0 0}.w-e-toolbar.w-e-toolbar-small{height:40px;line-height:40px}.w-e-toolbar .w-e-menu{position:relative;text-align:center;padding:0 10px;height:40px;line-height:40px;cursor:pointer;color:rgba(0,0,0,.65);font-size:18px;border-radius:4px}.w-e-toolbar.w-e-toolbar-small>.w-e-menu{padding:0 6px;height:30px;line-height:30px}.w-e-toolbar .w-e-menu:focus,.w-e-toolbar .w-e-menu:hover{background-color:#e6f7ff;color:#1890ff}.w-e-toolbar .w-e-active i,.w-e-toolbar .w-e-active:hover i{color:#1890ff}.w-e-panel-container{position:absolute;top:0;left:50%;padding:4px 0;text-align:left;list-style-type:none;background-color:#fff;background-clip:padding-box;border-radius:4px;outline:0;box-shadow:0 2px 8px rgba(0,0,0,.15);-webkit-transform:translateZ(0);z-index:3}.w-e-text-container .w-e-panel-container .w-e-panel-close{position:absolute;right:0;top:0;padding:5px;margin:2px 5px 0 0;cursor:pointer;color:#999}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover{color:#333}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title{list-style:none;display:-webkit-box;display:-ms-flexbox;display:flex;font-size:14px;margin:2px 10px 0 10px;border-bottom:1px solid #e8e8e8}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item{padding:3px 5px;color:#999;cursor:pointer;margin:0 3px;position:relative;top:1px}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active{color:#1890ff;border-bottom:1px solid #1890ff;cursor:default}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content{padding:10px 15px 10px 15px;font-size:16px}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus{outline:0}.w-e-panel-tab-content textarea{box-sizing:border-box;margin:0;font-variant:tabular-nums;list-style:none;font-feature-settings:\"tnum\";position:relative;display:inline-block;width:100%;padding:4px 11px;color:rgba(0,0,0,.65);font-size:14px;line-height:1.5;background-color:#fff;background-image:none;border:1px solid #d9d9d9;border-radius:4px;transition:all .3s}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus{border-color:#40a9ff;border-right-width:1px!important;outline:0;box-shadow:0 0 0 2px rgba(24,144,255,.2)}.w-e-panel-tab-content textarea::-webkit-scrollbar{width:6px;height:6px;padding-top:8px;background-color:transparent}.w-e-panel-tab-content textarea::-webkit-scrollbar-thumb{background-color:#d9d9d9}.w-e-panel-tab-content input[type=text]{box-sizing:border-box;margin:0;font-variant:tabular-nums;list-style:none;font-feature-settings:\"tnum\";position:relative;display:inline-block;width:100%;height:32px;padding:4px 11px;color:rgba(0,0,0,.65);font-size:14px;line-height:1.5;background-color:#fff;background-image:none;border:1px solid #d9d9d9;border-radius:4px;transition:all .3s}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small{width:30px;text-align:center}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block{display:block;width:100%;margin:10px 0}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus{outline:0;box-shadow:0 0 0 2px rgba(24,144,255,.2);border-color:#40a9ff;border-right-width:1px!important}.w-e-panel-tab-content .w-e-button-container button{line-height:1.499;position:relative;display:inline-block;font-weight:400;white-space:nowrap;text-align:center;background-image:none;cursor:pointer;transition:all .3s cubic-bezier(.645,.045,.355,1);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;touch-action:manipulation;height:32px;padding:0 15px;font-size:14px;border-radius:4px;color:rgba(0,0,3,.65);color:#fff;background-color:#1890ff;border:1px solid #1890ff;text-shadow:0 -1px 0 rgba(0,0,0,.12);box-shadow:0 2px 0 rgba(0,0,0,.045)}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left{float:left;margin-right:10px}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right{float:right;margin-left:10px}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray{color:#999}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red{color:#c24f4a}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover{color:#fff;background-color:#40a9ff;border-color:#40a9ff}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after{content:\"\";display:table;clear:both}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item{cursor:pointer;font-size:18px;padding:0 3px;display:inline-block;margin-bottom:4px}.w-e-text-container .w-e-panel-container .w-e-up-img-container{text-align:center}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn{color:#999;cursor:pointer;font-size:50px;line-height:1;border:1px dashed #e8e8e8;border-radius:4px;background-color:#fafafa}.w-e-up-btn .upload-text{font-size:14px;margin-bottom:20px;color:rgba(0,0,0,.65)}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover{color:#1890ff;border-color:#1890ff;transition:all .4s}.w-e-text::-webkit-scrollbar{width:6px;height:6px;padding-top:8px;background-color:transparent}.w-e-text::-webkit-scrollbar-thumb{background-color:#d9d9d9}.w-e-text-container{position:relative}.w-e-text-container .w-e-progress{position:absolute;background-color:#1e88e5;bottom:0;left:0;height:1px}.w-e-text{padding:0 20px;min-height:100px;max-height:400px;border:1px solid #d9d9d9;border-top:none;border-radius:0 0 4px 4px;overflow-y:auto}.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text p,.w-e-text pre,.w-e-text table{margin:10px 0;line-height:1.5}.w-e-text ol,.w-e-text ul{margin:10px 0 10px 20px}.w-e-text blockquote{display:block;border-left:8px solid #d0e5f2;padding:5px 10px;margin:10px 0;line-height:1.4;font-size:100%;background-color:#f1f1f1}.w-e-text code{display:inline-block;background-color:#f1f1f1;border-radius:3px;padding:3px 5px;margin:0 3px}.w-e-text pre code{display:block}.w-e-text table{border-top:1px solid #ccc;border-left:1px solid #ccc}.w-e-text table td,.w-e-text table th{border-bottom:1px solid #ccc;border-right:1px solid #ccc;padding:3px 5px}.w-e-text table th{border-bottom:2px solid #ccc;text-align:center}.w-e-text:focus{outline:0}.w-e-text img{cursor:pointer}.w-e-text img:hover{box-shadow:0 0 5px #333}';\r\n    var style = document.createElement('style');\r\n    style.type = 'text/css';\r\n    style.innerHTML = inlinecss;\r\n    document.getElementsByTagName('HEAD').item(0).appendChild(style);\r\n\r\n// 返回\r\n    return window.wangEditor || Editor;\r\n\r\n})));\r\n"],"names":["global","factory","exports","module","define","amd","wangEditor","this","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","result","html","div","nodeType","selectorResult","Array","replace","trim","indexOf","document","createElement","innerHTML","children","querySelectorAll","length","i","$","prototype","constructor","forEach","fn","elem","call","clone","deep","cloneList","push","cloneNode","get","index","first","last","on","type","types","split","addEventListener","e","target","matches","off","removeEventListener","attr","key","val","getAttribute","setAttribute","addClass","className","arr","filter","item","join","removeClass","css","currentStyle","style","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","value","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","content","alt","src","zIndex","debug","linkCheck","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","success","fail","error","timeout","qiniu","width","minHeight","maxHeight","textBgColor","toolBarSize","UA","_ua","navigator","userAgent","isWebkit","test","isIE","window","objForEach","obj","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","editor","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","_this","titleHtml","$container","$title","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","_command","FontSize","FontName","fontName","clearTimeout","menuHeight","$menuELem","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","$inputs","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","link","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$code","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$trs","trLength","tr","locationData","$currentTr","newTr","trData","tdIndex","$currentTd","name","toLowerCase","$table","textValId","width30","width50","width100","delBtn","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","fileElem","click","fileList","files","url","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","attrs","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","dataTransfer","_name","_useStyleWithCSS","execCommand","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","$containerElem","getSelection","rangeCount","getRangeAt","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","img","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","xhr","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","Object","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarSize","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","getElementsByTagName"],"mappings":"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"}